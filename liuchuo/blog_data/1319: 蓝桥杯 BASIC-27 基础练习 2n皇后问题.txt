<p><span style="color: #3366ff;"><strong>问题描述</strong></span><br>给定一个n*n的棋盘，棋盘中有一些位置不能放皇后。现在要向棋盘中放入n个黑皇后和n个白皇后，使任意的两个黑皇后都不在同一行、同一列或同一条对角线上，任意的两个白皇后都不在同一行、同一列或同一条对角线上。问总共有多少种放法？n小于等于8。<br><strong><span style="color: #3366ff;">输入格式</span></strong><br>输入的第一行为一个整数n，表示棋盘的大小。<br>接下来n行，每行n个0或1的整数，如果一个整数为1，表示对应的位置可以放皇后，如果一个整数为0，表示对应的位置不可以放皇后。<br><strong><span style="color: #3366ff;">输出格式</span></strong><br>输出一个整数，表示总共有多少种放法。<br><strong><span style="color: #3366ff;">样例输入</span></strong><br>4<br>1 1 1 1<br>1 1 1 1<br>1 1 1 1<br>1 1 1 1<br><strong><span style="color: #3366ff;">样例输出</span></strong><br>2<br>样例输入<br>4<br>1 0 1 1<br>1 1 1 1<br>1 1 1 1<br>1 1 1 1<br><span style="color: #3366ff;"><strong>样例输出</strong></span><br>0</p><p><strong><span style="color: #ff9900;">分析：和n皇后问题一样，只不过2n皇后要用两个深度优先搜索。</span></strong><br><strong><span style="color: #ff9900;">调用放置白皇后的递归dfs，先放置白皇后，当每一个白皇后放置成功之后，在递归的return语句之前，</span></strong><br><strong><span style="color: #ff9900;">新建一个棋盘，复制原来的棋盘后并把放置了白皇后的位置置为0，调用摆放黑皇后的深度优先搜索。</span></strong><br><strong><span style="color: #ff9900;">当黑皇后也找到相应的解法后，cnt++; 最后输出cnt的值。</span></strong></p><p> </p>