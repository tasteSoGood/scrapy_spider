<p>Given an unsorted array of integers, find the length of longest continuous increasing subsequence (subarray).</p><p>Example 1:<br>Input: [1,3,5,4,7]<br>Output: 3<br>Explanation: The longest continuous increasing subsequence is [1,3,5], its length is 3.<br>Even though [1,3,5,7] is also an increasing subsequence, it is not a continuous one where 5 and 7 are separated by 4.<br>Example 2:<br>Input: [2,2,2,2,2]<br>Output: 1<br>Explanation: The longest continuous increasing subsequence is [2], its length is 1.<br>Note: Length of the array will not exceed 10,000.</p><p><span style="color: #99cc00;"><strong>题目大意：给一个乱序数组，返回这个数组中递增连续子序列中最长的长度～</strong></span></p><p><span style="color: #ff9900;"><strong>分析：遍历从i = 1到结尾，每次比较nums[i-1]和nums[i]，如果是递增的就将temp++，否则temp=1，每次将temp最大值保存在ans中，最后返回ans的值～</strong></span></p><p> </p>