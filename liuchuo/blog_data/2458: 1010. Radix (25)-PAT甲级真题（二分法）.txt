<p><span style="color: #33cccc;"><strong>Given a pair of positive integers, for example, 6 and 110, can this equation 6 = 110 be true? The answer is “yes”, if 6 is a decimal number and 110 is a binary number.</strong></span></p><p><span style="color: #33cccc;"><strong>Now for any pair of positive integers N1 and N2, your task is to find the radix of one number while that of the other is given.</strong></span></p><p><span style="color: #3366ff;"><strong>Input Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>Each input file contains one test case. Each case occupies a line which contains 4 positive integers:</strong></span><br><span style="color: #33cccc;"><strong>N1 N2 tag radix</strong></span><br><span style="color: #33cccc;"><strong>Here N1 and N2 each has no more than 10 digits. A digit is less than its radix and is chosen from the set {0-9, a-z} where 0-9 represent the decimal numbers 0-9, and a-z represent the decimal numbers 10-35. The last number “radix” is the radix of N1 if “tag” is 1, or of N2 if “tag” is 2.</strong></span></p><p><span style="color: #3366ff;"><strong>Output Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>For each test case, print in one line the radix of the other number so that the equation N1 = N2 is true. If the equation is impossible, print “Impossible”. If the solution is not unique, output the smallest possible radix.</strong></span></p><p><span style="color: #3366ff;"><strong>Sample Input 1:</strong></span><br><span style="color: #33cccc;"><strong>6 110 1 10</strong></span><br><span style="color: #3366ff;"><strong>Sample Output 1:</strong></span><br><span style="color: #33cccc;"><strong>2</strong></span><br><span style="color: #3366ff;"><strong>Sample Input 2:</strong></span><br><span style="color: #33cccc;"><strong>1 ab 1 2</strong></span><br><span style="color: #3366ff;"><strong>Sample Output 2:</strong></span><br><span style="color: #33cccc;"><strong>Impossible</strong></span></p><p><span style="color: #ff9900;"><strong>分析：convert函数：给定一个数值和一个进制，将它转化为10进制。转化过程中可能产生溢出</strong></span><br><span style="color: #ff9900;"><strong>find_radix函数：找到令两个数值相等的进制数。在查找的过程中，需要使用二分查找算法，如果使用当前进制转化得到数值比另一个大或者小于0，说明这个进制太大～</strong></span></p><p> </p>