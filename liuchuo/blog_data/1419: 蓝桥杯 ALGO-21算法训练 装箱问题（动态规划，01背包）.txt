<p><strong><span style="color: #3366ff;">问题描述</span></strong><br><span style="color: #33cccc;">　　有一个箱子容量为V（正整数，0＜＝V＜＝20000），同时有n个物品（0＜n＜＝30），每个物品有一个体积（正整数）。</span><br><span style="color: #33cccc;">　　要求n个物品中，任取若干个装入箱内，使箱子的剩余空间为最小。</span><br><strong><span style="color: #3366ff;">输入格式</span></strong><br><span style="color: #33cccc;">　　第一行为一个整数，表示箱子容量；</span><br><span style="color: #33cccc;">　　第二行为一个整数，表示有n个物品；</span><br><span style="color: #33cccc;">　　接下来n行，每行一个整数表示这n个物品的各自体积。</span><br><strong><span style="color: #3366ff;">输出格式</span></strong><br><span style="color: #33cccc;">　　一个整数，表示箱子剩余空间。</span><br><strong><span style="color: #3366ff;">样例输入</span></strong><br><span style="color: #33cccc;">24</span><br><span style="color: #33cccc;">6</span><br><span style="color: #33cccc;">8</span><br><span style="color: #33cccc;">3</span><br><span style="color: #33cccc;">12</span><br><span style="color: #33cccc;">7</span><br><span style="color: #33cccc;">9</span><br><span style="color: #33cccc;">7</span><br><strong><span style="color: #3366ff;">样例输出</span></strong><br><span style="color: #33cccc;">0</span></p><p><strong><span style="color: #ff9900;">分析：dp[i][j]表示前i件物品选则部分装入体积为j的背包后，背包总共所占的最大体积，</span></strong><br><strong><span style="color: #ff9900;">一共有n件物品，那么dp[n][v]就是前n件物品选择部分装入体积为v的背包后，背包总共占有的最大体积</span></strong><br><strong><span style="color: #ff9900;">1.当当前输入的物品体积大于背包容量，则不装入背包，dp[i][j] = dp[i-1][j];</span></strong><br><strong><span style="color: #ff9900;">2.当当前输入的物品体积小于等于背包容量，考虑装或者不装两种状态，取体积最大的那个：dp[i][j] = max(dp[i-1][j], dp[i-1][j-t] + t);</span></strong></p><p> </p>