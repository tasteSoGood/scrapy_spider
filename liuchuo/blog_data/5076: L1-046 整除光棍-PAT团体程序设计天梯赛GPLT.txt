<p><span style="color: #33cccc;"><strong>这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数x，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字s，表示x乘以s是一个光棍，第二个数字n是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。</strong></span></p><p><span style="color: #33cccc;"><strong>提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除x为止。但难点在于，s可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。</strong></span></p><p><span style="color: #3366ff;"><strong>输入格式：</strong></span><br><span style="color: #33cccc;"><strong>输入在一行中给出一个不以5结尾的正奇数x（&lt; 1000）。</strong></span></p><p><span style="color: #3366ff;"><strong>输出格式：</strong></span><br><span style="color: #33cccc;"><strong>在一行中输出相应的最小的s和n，其间以1个空格分隔。</strong></span></p><p><span style="color: #3366ff;"><strong>输入样例：</strong></span><br><span style="color: #33cccc;"><strong>31</strong></span><br><span style="color: #3366ff;"><strong>输出样例：</strong></span><br><span style="color: #33cccc;"><strong>3584229390681 15</strong></span></p><p><span style="color: #ff9900;"><strong>分析：从ans为1个1开始遍历到n个1，先把ans置为大于等于n的数字，并记录此时cnt。</strong></span><br><span style="color: #ff9900;"><strong>开始循环，输出ans/n, 即答案的第一位，如果此时正好整除了，立即退出循环，否则把除过n剩下的部分在加上一位，继续循环。</strong></span><span style="color: #ff9900;"><strong>循环结束后答案的每一位被依次输出，最后输出cnt位数～</strong></span></p><p> </p>