<p>Given a non-empty integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.</p><p>You may assume the array’s length is at most 10,000.</p><p>Example:</p><p>Input:<br>[1,2,3]</p><p>Output:<br>2</p><p>Explanation:<br>Only two moves are needed (remember each move increments or decrements one element):</p><p>[1,2,3] =&gt; [2,2,3] =&gt; [2,2,2]</p><p><span style="color: #99cc00;"><strong>题目大意：给一个非空整数数组，每次可以将数组中一个元素+1或者-1，求最少需要多少次这样的操作，才能使数组中所有的数都想等～</strong></span></p><p><span style="color: #ff9900;"><strong>分析：让所有数都等于那个第n/2 + 1大的数字～首先用nth_element(nums.begin(), nums.begin() + n / 2, nums.end());将第n/2 + 1大的数字放到最中间，然后取得它的值为mid，最后遍历数组，累加所有元素与mid的差的绝对值即为所求～</strong></span></p><p> </p>