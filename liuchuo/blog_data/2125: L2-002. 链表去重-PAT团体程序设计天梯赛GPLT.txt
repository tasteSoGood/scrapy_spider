<p><span style="color: #33cccc;"><strong>给定一个带整数键值的单链表L，本题要求你编写程序，删除那些键值的绝对值有重复的结点。即对任意键值K，只有键值或其绝对值等于K的第一个结点可以被保留。同时，所有被删除的结点必须被保存在另外一个链表中。例如：另L为21→-15→-15→-7→15，则你必须输出去重后的链表21→-15→-7、以及被删除的链表-15→15。</strong></span></p><p><span style="color: #3366ff;"><strong>输入格式：</strong></span></p><p><span style="color: #33cccc;"><strong>输入第一行包含链表第一个结点的地址、以及结点个数N（&lt;= 105 的正整数）。结点地址是一个非负的5位整数，NULL指针用-1表示。</strong></span></p><p><span style="color: #33cccc;"><strong>随后N行，每行按下列格式给出一个结点的信息：</strong></span></p><p><span style="color: #33cccc;"><strong>Address Key Next</strong></span></p><p><span style="color: #33cccc;"><strong>其中Address是结点的地址，Key是绝对值不超过104的整数，Next是下一个结点的地址。</strong></span></p><p><span style="color: #3366ff;"><strong>输出格式：</strong></span></p><p><span style="color: #33cccc;"><strong>首先输出去重后的链表，然后输出被删除结点组成的链表。每个结点占一行，按输入的格式输出。</strong></span></p><p><span style="color: #3366ff;"><strong>输入样例：</strong></span><br><span style="color: #33cccc;"><strong>00100 5</strong></span><br><span style="color: #33cccc;"><strong>99999 -7 87654</strong></span><br><span style="color: #33cccc;"><strong>23854 -15 00000</strong></span><br><span style="color: #33cccc;"><strong>87654 15 -1</strong></span><br><span style="color: #33cccc;"><strong>00000 -15 99999</strong></span><br><span style="color: #33cccc;"><strong>00100 21 23854</strong></span><br><span style="color: #3366ff;"><strong>输出样例：</strong></span><br><span style="color: #33cccc;"><strong>00100 21 23854</strong></span><br><span style="color: #33cccc;"><strong>23854 -15 99999</strong></span><br><span style="color: #33cccc;"><strong>99999 -7 -1</strong></span><br><span style="color: #33cccc;"><strong>00000 -15 87654</strong></span><br><span style="color: #33cccc;"><strong>87654 15 -1</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：给一个链表，去重（去掉值或者绝对值相等的），先输出删除后的链表，再输出删除了的链表。</strong></span><br><span style="color: #ff9900;"><strong>分析：用结构体数组存储这个链表，大小为maxn = 100000，node[i]表示地址为i的结点。在结构体中定义一个num变量，将num变量先初始化为2 * maxn。通过改变num变量的值最后sort排序来改变链表的顺序。</strong></span><br><span style="color: #ff9900;"><strong>将没有删除的结点的num标记为cnt1，cnt1为当前没有删除的结点的个数；将需要删除的结点的num标记为maxn + cnt2，cnt2表示当前删除了的结点的个数，因为一开始初始化为了2 * maxn，所以我们可以通过对num排序达到：num = 0~maxn为不删除结点，num = maxn~2maxn为删除结点，num = 2maxn为无效结点</strong></span><br><span style="color: #ff9900;"><strong>这样sort后就会按照需要输出的顺序将结点排序，我们只需要输出前cnt1+cnt2个结点即可～</strong></span></p><p> </p>