<p><span style="color: #3366ff;"><strong>526. Beautiful Arrangement</strong></span><br><span style="color: #33cccc;"><strong>Suppose you have N integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these N numbers successfully if one of the following is true for the ith position (1 ≤ i ≤ N) in this array:</strong></span></p><p><span style="color: #33cccc;"><strong>The number at the ith position is divisible by i.</strong></span><br><span style="color: #33cccc;"><strong>i is divisible by the number at the ith position.</strong></span><br><span style="color: #33cccc;"><strong>Now given N, how many beautiful arrangements can you construct?</strong></span></p><p><span style="color: #33cccc;"><strong>Example 1:</strong></span><br><span style="color: #33cccc;"><strong>Input: 2</strong></span><br><span style="color: #33cccc;"><strong>Output: 2</strong></span><br><span style="color: #33cccc;"><strong>Explanation:</strong></span></p><p><span style="color: #33cccc;"><strong>The first beautiful arrangement is [1, 2]:</strong></span></p><p><span style="color: #33cccc;"><strong>Number at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).</strong></span></p><p><span style="color: #33cccc;"><strong>Number at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).</strong></span></p><p><span style="color: #33cccc;"><strong>The second beautiful arrangement is [2, 1]:</strong></span></p><p><span style="color: #33cccc;"><strong>Number at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).</strong></span></p><p><span style="color: #33cccc;"><strong>Number at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.</strong></span><br><span style="color: #33cccc;"><strong>Note:</strong></span><br><span style="color: #33cccc;"><strong>N is a positive integer and will not exceed 15.</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：N个数1～N，求它有多少种排列方式，满足：对于每一位，i位上的数字能被i整除，或者i能被i位上的数字整除～</strong></span><br><span style="color: #ff9900;"><strong>分析：深度优先搜索，从N开始一直到0，用visit标记当前元素是否访问过，当当前下标为1的时候表示当前深度优先的一条路径满足条件，result+1，否则遍历visit数组看有没有没被访问过的元素，如果满足(i % index == 0 || index % i == 0)就标记为已经访问过，然后继续向下遍历dfs(index-1)～最后返回result的结果～</strong></span></p><p> </p>