<p><span style="color: #33cccc;"><strong>About 900 years ago, a Chinese philosopher Sima Guang wrote a history book in which he talked about people’s talent and virtue. According to his theory, a man being outstanding in both talent and virtue must be a “sage（圣人）”; being less excellent but with one’s virtue outweighs talent can be called a “nobleman（君子）”; being good in neither is a “fool man（愚人）”; yet a fool man is better than a “small man（小人）” who prefers talent than virtue.</strong></span></p><p><span style="color: #33cccc;"><strong>Now given the grades of talent and virtue of a group of people, you are supposed to rank them according to Sima Guang’s theory.</strong></span></p><p><span style="color: #3366ff;"><strong>Input Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>Each input file contains one test case. Each case first gives 3 positive integers in a line: N (&lt;=105), the total number of people to be ranked; L (&gt;=60), the lower bound of the qualified grades — that is, only the ones whose grades of talent and virtue are both not below this line will be ranked; and H (&lt;100), the higher line of qualification — that is, those with both grades not below this line are considered as the “sages”, and will be ranked in non-increasing order according to their total grades. Those with talent grades below H but virtue grades not are cosidered as the “noblemen”, and are also ranked in non-increasing order according to their total grades, but they are listed after the “sages”. Those with both grades below H, but with virtue not lower than talent are considered as the “fool men”. They are ranked in the same way but after the “noblemen”. The rest of people whose grades both pass the L line are ranked after the “fool men”.</strong></span></p><p><span style="color: #33cccc;"><strong>Then N lines follow, each gives the information of a person in the format:</strong></span></p><p><span style="color: #33cccc;"><strong>ID_Number Virtue_Grade Talent_Grade</strong></span><br><span style="color: #33cccc;"><strong>where ID_Number is an 8-digit number, and both grades are integers in [0, 100]. All the numbers are separated by a space.</strong></span><br><span style="color: #33cccc;"><strong>Output Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>The first line of output must give M (&lt;=N), the total number of people that are actually ranked. Then M lines follow, each gives the information of a person in the same format as the input, according to the ranking rules. If there is a tie of the total grade, they must be ranked with respect to their virtue grades in non-increasing order. If there is still a tie, then output in increasing order of their ID’s.</strong></span></p><p><span style="color: #3366ff;"><strong>Sample Input:</strong></span><br><span style="color: #33cccc;"><strong>14 60 80</strong></span><br><span style="color: #33cccc;"><strong>10000001 64 90</strong></span><br><span style="color: #33cccc;"><strong>10000002 90 60</strong></span><br><span style="color: #33cccc;"><strong>10000011 85 80</strong></span><br><span style="color: #33cccc;"><strong>10000003 85 80</strong></span><br><span style="color: #33cccc;"><strong>10000004 80 85</strong></span><br><span style="color: #33cccc;"><strong>10000005 82 77</strong></span><br><span style="color: #33cccc;"><strong>10000006 83 76</strong></span><br><span style="color: #33cccc;"><strong>10000007 90 78</strong></span><br><span style="color: #33cccc;"><strong>10000008 75 79</strong></span><br><span style="color: #33cccc;"><strong>10000009 59 90</strong></span><br><span style="color: #33cccc;"><strong>10000010 88 45</strong></span><br><span style="color: #33cccc;"><strong>10000012 80 100</strong></span><br><span style="color: #33cccc;"><strong>10000013 90 99</strong></span><br><span style="color: #33cccc;"><strong>10000014 66 60</strong></span><br><span style="color: #3366ff;"><strong>Sample Output:</strong></span><br><span style="color: #33cccc;"><strong>12</strong></span><br><span style="color: #33cccc;"><strong>10000013 90 99</strong></span><br><span style="color: #33cccc;"><strong>10000012 80 100</strong></span><br><span style="color: #33cccc;"><strong>10000003 85 80</strong></span><br><span style="color: #33cccc;"><strong>10000011 85 80</strong></span><br><span style="color: #33cccc;"><strong>10000004 80 85</strong></span><br><span style="color: #33cccc;"><strong>10000007 90 78</strong></span><br><span style="color: #33cccc;"><strong>10000006 83 76</strong></span><br><span style="color: #33cccc;"><strong>10000005 82 77</strong></span><br><span style="color: #33cccc;"><strong>10000002 90 60</strong></span><br><span style="color: #33cccc;"><strong>10000014 66 60</strong></span><br><span style="color: #33cccc;"><strong>10000008 75 79</strong></span><br><span style="color: #33cccc;"><strong>10000001 64 90</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：输入第1行给出3个正整数，分别为：N为考生总数；L为录取最低分数线，即德分和才分均不低于L的考生才有资格被考虑录取；H为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于H，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线L的考生也按总分排序，但排在第三类考生之后。输出第1行首先给出达到最低分数线的考生人数M，随后M行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。</strong></span></p><p><span style="color: #ff9900;"><strong>分析：用结构体存储。写好cmp函数～结构体数组vector v[4]中v[0]保存第一类考生，v[1]保存第二类考生……以此类推～写好cmp函数很重要，cmp函数中，排序先按照总分排序，然后按照德分排序，最后按照才分排序……最后输出符合条件的结果～</strong></span></p><p> </p>