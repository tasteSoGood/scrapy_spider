<p>Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -.</p><p>Example:<br>Given a = 1 and b = 2, return 3.</p><p>分析：位运算~<br>首先，已知异或（就是这个“^”符号）可以得到：<br>0^0 = 0<br>0^1 = 1<br>1^1 = 0<br>正是位相加时该位的结果~（只不过还有个进位没加罢了~）<br>所以对于还没有加进位的result，result可以暂时等于a^b</p><p>其次，已知与运算（就是这个“&amp;”符号）可以得到：<br>0&amp;0 = 0<br>0&amp;1 = 0<br>1&amp;1 = 1<br>正是位相加时候有进位的那一位标注为了1~<br>但是进位是往前一个位相加上去的呀~<br>所以carry = (a &amp; b) &lt;&lt; 1</p><p>现在处理要把result加上进位的事情～<br>如果进位carry等于0，那么不用加～直接等于result的值就好了～<br>如果进位不等于0，那么就要把result和carry的值按位相加～<br>按位相加的结果也可能导致进位~所以先用个临时变量temp把carry的值保存，然后令carry = (result &amp; temp) &lt;&lt; 1（也就是result和原来carry按位相加后进位的结果～），然后result = result ^ temp（也就是result和原来carry按位相加的结果～），不断循环往复，直到有一次carry等于0，不再需要进位了～～</p><p> </p>