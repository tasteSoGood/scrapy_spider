<p>Shuffle a set of numbers without duplicates.</p><p>Example:</p><p>// Init an array with set 1, 2, and 3.<br>int[] nums = {1,2,3};<br>Solution solution = new Solution(nums);</p><p>// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.<br>solution.shuffle();</p><p>// Resets the array back to its original configuration [1,2,3].<br>solution.reset();</p><p>// Returns the random shuffling of array [1,2,3].<br>solution.shuffle();</p><p><span style="color: #99cc00;"><strong>题目大意：实现洗牌算法。给定一个没有重复元素的数组，写shuffle和set函数，shuffle函数要求对nums数组进行洗牌然后返回，set函数要求返回原来的nums数组～</strong></span><br><span style="color: #ff9900;"><strong>分析：设立两个数组nums和origin，如果set就返回不会更改的origin数组，如果要洗牌，从nums的最后一位开始，设index为0～n-1中的一个随机数，产生后将index与最后一位元素进行交换，这样最后一位就算敲定了，然后再往前一位，假设当前位的下标是k，那就产生0～k之间的一个随机数，然后交换，以此类推，rand() % (i + 1)表示生成0～i中的一个随机数～直到第一位为止～</strong></span></p><p> </p>