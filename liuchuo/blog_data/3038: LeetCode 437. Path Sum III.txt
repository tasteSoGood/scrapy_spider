<p>You are given a binary tree in which each node contains an integer value.</p><p>Find the number of paths that sum to a given value.</p><p>The path does not need to start or end at the root or a leaf, but it must go downwards (traveling only from parent nodes to child nodes).</p><p>The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.</p><p>Example:</p><p>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8</p><p>10<br>/ \\<br>5 -3<br>/ \\ \\<br>3 2 11<br>/ \\ \\<br>3 -2 1</p><p>Return 3. The paths that sum to 8 are:</p><p>1. 5 -&gt; 3<br>2. 5 -&gt; 2 -&gt; 1<br>3. -3 -&gt; 11</p><p><span style="color: #ff9900;"><strong>分析：深度优先搜索，将root以及root-&gt;left、root-&gt;right结点分别作为开始结点计算下方是否有满足sum的和，dfs函数就是用来计算统计满足条件的个数的。dfs从TreeNode* root开始，查找是否满足sum和的值（此时的sum是部分和），分别dfs左边结点、右边结点，直到找到root-&gt;val == sum时候result++，在pathSum函数中返回result的值。</strong></span></p><p> </p>