<p>Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.<br>For example:<br>Given the following binary tree,<br>1 &lt;—<br>/ \\<br>2 3 &lt;—<br>\\ \\<br>5 4 &lt;—<br>You should return [1, 3, 4].</p><p><strong><span style="color: #ff9900;">分析：这道题可以用广度优先搜索也可以用深度优先搜索。这里用广度优先方法解决：</span></strong><br><strong><span style="color: #ff9900;">如果root为空，则返回空vector。</span></strong><strong><span style="color: #ff9900;">建立存放TreeNode指针的队列，将root结点入队；</span></strong><strong><span style="color: #ff9900;">出队root的同时入队root的存在的left和right结点；</span></strong><strong><span style="color: #ff9900;">按照层序遍历的方式，把每一层的最后一个结点的值存入vector中，最后返回vector～</span></strong></p><p></p>