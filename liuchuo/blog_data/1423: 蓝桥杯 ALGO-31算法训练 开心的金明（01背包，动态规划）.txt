<p><strong><span style="color: #3366ff;">问题描述</span></strong><br><span style="color: #33cccc;">　　金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：</span><br><span style="color: #33cccc;">“你的房间需要购买哪些物品，怎 么布置，你说了算，只要不超过N元钱就行”。今天一早金明就开始做预算，但是他想买的东西太多了，</span><br><span style="color: #33cccc;">肯定会超过妈妈限定的N元。于是，他把每件物品规定了一 个重要度，分为5等：用整数1~5表示，第5等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望在不超过N元（可以等于N元）的前提 下，使每件物品的价格与重要度的乘积的总和最大。</span><br><span style="color: #33cccc;">　　设第j件物品的价格为v[j]，重要度为w[j]，共选中了k件物品，编号依次为 j1，j2，……，jk，则所求的总和为：</span><br><span style="color: #33cccc;">　　v[j1]*w[j1]+v[j2]*w[j2]+ …+v[jk]*w[jk]。（其中*为乘号）</span><br><span style="color: #33cccc;">　　请 你帮助金明设计一个满足要求的购物单。</span><br><strong><span style="color: #3366ff;">输入格式</span></strong><br><span style="color: #33cccc;">　　输入文件 的第1行，为两个正整数，用一个空格隔开：</span><br><span style="color: #33cccc;">　　N m</span><br><span style="color: #33cccc;">　　（其中N（&lt;30000）表示总钱 数，m（&lt;25）为希望购买物品的个数。）</span><br><span style="color: #33cccc;">　　从第2行到第m+1行，第j行给出了编号为j-1的物品的基本数据，每行有2个非负整数</span><br><span style="color: #33cccc;">　　v p</span><br><span style="color: #33cccc;">　　（其中v表示该物品的价格(v&lt;=10000)，p表示该物品的重要度(1~5)）</span><br><strong><span style="color: #3366ff;">输出格式</span></strong><br><span style="color: #33cccc;">　　输出文件只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值（&lt;100000000）。</span><br><strong><span style="color: #3366ff;">样例输入</span></strong><br><span style="color: #33cccc;">1000 5</span><br><span style="color: #33cccc;">800 2</span><br><span style="color: #33cccc;">400 5</span><br><span style="color: #33cccc;">300 5</span><br><span style="color: #33cccc;">400 3</span><br><span style="color: #33cccc;">200 2</span><br><strong><span style="color: #3366ff;">样例输出</span></strong><br><span style="color: #33cccc;">3900</span></p><p><strong><span style="color: #ff9900;">分析：01背包问题。对于每一个输入都有买和不买两种状态。</span></strong><br><strong><span style="color: #ff9900;">dp[i][j]表示对于前i件物品选择部分购买限定总价不超过j元后，物品的价格与重要程度乘积的总和的最大值</span></strong><br><strong><span style="color: #ff9900;">可得dp[m][n]即是所求的解。</span></strong><br><strong><span style="color: #ff9900;">1.当当前输入的物品价格大于允许的最大总价j元，则不买，dp[i][j] = dp[i-1][j];</span></strong><br><strong><span style="color: #ff9900;">2.当当前输入的物品体积小于等于允许的最大总价j元，考虑买或者不买两种状态，取物品的价格与重要程度乘积的总和最大的那个：dp[i][j] = max(dp[i-1][j], dp[i-1][j-a] + t);<br></span></strong></p><p> </p>