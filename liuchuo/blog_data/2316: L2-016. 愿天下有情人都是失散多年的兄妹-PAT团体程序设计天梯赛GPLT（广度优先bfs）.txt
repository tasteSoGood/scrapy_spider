<p><span style="color: #33cccc;"><strong>呵呵。大家都知道五服以内不得通婚，即两个人最近的共同祖先如果在五代以内（即本人、父母、祖父母、曾祖父母、高祖父母）则不可通婚。本题就请你帮助一对有情人判断一下，他们究竟是否可以成婚？</strong></span></p><p><span style="color: #3366ff;"><strong>输入格式：</strong></span></p><p><span style="color: #33cccc;"><strong>输入第一行给出一个正整数N（2 &lt;= N &lt;= 104），随后N行，每行按以下格式给出一个人的信息：</strong></span></p><p><span style="color: #33cccc;"><strong>本人ID 性别 父亲ID 母亲ID</strong></span></p><p><span style="color: #33cccc;"><strong>其中ID是5位数字，每人不同；性别M代表男性、F代表女性。如果某人的父亲或母亲已经不可考，则相应的ID位置上标记为-1。</strong></span></p><p><span style="color: #33cccc;"><strong>接下来给出一个正整数K，随后K行，每行给出一对有情人的ID，其间以空格分隔。</strong></span></p><p><span style="color: #33cccc;"><strong>注意：题目保证两个人是同辈，每人只有一个性别，并且血缘关系网中没有乱伦或隔辈成婚的情况。</strong></span></p><p><span style="color: #3366ff;"><strong>输出格式：</strong></span></p><p><span style="color: #33cccc;"><strong>对每一对有情人，判断他们的关系是否可以通婚：如果两人是同性，输出“Never Mind”；如果是异性并且关系出了五服，输出“Yes”；如果异性关系未出五服，输出“No”。</strong></span></p><p><span style="color: #3366ff;"><strong>输入样例：</strong></span><br><span style="color: #33cccc;"><strong>24</strong></span><br><span style="color: #33cccc;"><strong>00001 M 01111 -1</strong></span><br><span style="color: #33cccc;"><strong>00002 F 02222 03333</strong></span><br><span style="color: #33cccc;"><strong>00003 M 02222 03333</strong></span><br><span style="color: #33cccc;"><strong>00004 F 04444 03333</strong></span><br><span style="color: #33cccc;"><strong>00005 M 04444 05555</strong></span><br><span style="color: #33cccc;"><strong>00006 F 04444 05555</strong></span><br><span style="color: #33cccc;"><strong>00007 F 06666 07777</strong></span><br><span style="color: #33cccc;"><strong>00008 M 06666 07777</strong></span><br><span style="color: #33cccc;"><strong>00009 M 00001 00002</strong></span><br><span style="color: #33cccc;"><strong>00010 M 00003 00006</strong></span><br><span style="color: #33cccc;"><strong>00011 F 00005 00007</strong></span><br><span style="color: #33cccc;"><strong>00012 F 00008 08888</strong></span><br><span style="color: #33cccc;"><strong>00013 F 00009 00011</strong></span><br><span style="color: #33cccc;"><strong>00014 M 00010 09999</strong></span><br><span style="color: #33cccc;"><strong>00015 M 00010 09999</strong></span><br><span style="color: #33cccc;"><strong>00016 M 10000 00012</strong></span><br><span style="color: #33cccc;"><strong>00017 F -1 00012</strong></span><br><span style="color: #33cccc;"><strong>00018 F 11000 00013</strong></span><br><span style="color: #33cccc;"><strong>00019 F 11100 00018</strong></span><br><span style="color: #33cccc;"><strong>00020 F 00015 11110</strong></span><br><span style="color: #33cccc;"><strong>00021 M 11100 00020</strong></span><br><span style="color: #33cccc;"><strong>00022 M 00016 -1</strong></span><br><span style="color: #33cccc;"><strong>00023 M 10012 00017</strong></span><br><span style="color: #33cccc;"><strong>00024 M 00022 10013</strong></span><br><span style="color: #33cccc;"><strong>9</strong></span><br><span style="color: #33cccc;"><strong>00021 00024</strong></span><br><span style="color: #33cccc;"><strong>00019 00024</strong></span><br><span style="color: #33cccc;"><strong>00011 00012</strong></span><br><span style="color: #33cccc;"><strong>00022 00018</strong></span><br><span style="color: #33cccc;"><strong>00001 00004</strong></span><br><span style="color: #33cccc;"><strong>00013 00016</strong></span><br><span style="color: #33cccc;"><strong>00017 00015</strong></span><br><span style="color: #33cccc;"><strong>00019 00021</strong></span><br><span style="color: #33cccc;"><strong>00010 00011</strong></span><br><span style="color: #3366ff;"><strong>输出样例：</strong></span><br><span style="color: #33cccc;"><strong>Never Mind</strong></span><br><span style="color: #33cccc;"><strong>Yes</strong></span><br><span style="color: #33cccc;"><strong>Never Mind</strong></span><br><span style="color: #33cccc;"><strong>No</strong></span><br><span style="color: #33cccc;"><strong>Yes</strong></span><br><span style="color: #33cccc;"><strong>No</strong></span><br><span style="color: #33cccc;"><strong>Yes</strong></span><br><span style="color: #33cccc;"><strong>No</strong></span><br><span style="color: #33cccc;"><strong>No</strong></span></p><p><span style="color: #99cc00;"><strong>分析：我用的方法是广度优先，然后把每个人和他们的祖先们压入一个set里面，判断set前后有没有大小改变，如果没改变说明重复了，所以有相同祖先，所以就输出No，用level数组标记他们当前的层数在push一层的时候令他们的层数为上一层+1，一直到五层判断结束。如果结束了还没有输出过No，那么就输出yes。（其实后来想到可以用数组标记的方法，不用集合来这么复杂的。。）</strong></span><br><span style="color: #ff9900;"><strong>有三个注意点：1.一开始有三个测试点不过，然后。。发现。。每次在输入的时候把它们父母的性别也要标记一下，因为！测试数据里面可能会判断某个人的父亲（但是不在给出的本人id的列表中），或者母亲和某个人是否能结婚。。。。也就是说测试数据里面如果出现了09999，它是某个人的父母，那么也可能会被判断。。所以。。所以。。要在输入的时候加上父母的性别的标记。。。PAT教我做人。。<br></strong></span><strong>【有可爱的小伙伴和我说不太明白第一个注意点的意思，我的意思是，测试用例里面，除了测试样例那样常规的9种询问的是否可以通婚的用例，还有可能会问02222和03333是否可以通婚，02222和04444是否可以通婚。但是我们不知道02222和03333和04444的父母是谁，所以就默认他们之间是没有血缘关系的，接下来考虑的就是他们的性别问题了，因为02222是男的（因为他是父亲嘛）而03333是女的，那就要输出可以通婚；同理，04444是男的，就要输出never mind~】</strong><br><span style="color: #ff9900;"><strong>2.因为我开的是全局数组，用全局数组的时候就千万要记得，用完之后记得把它。。置回0啊啊啊。。。因为下一组测试数据用这个数组的时候可能会不小心用到了上一组测试数据保存的结果。。。就会出错了。。</strong></span><br><span style="color: #ff9900;"><strong>3.用exist数组标记是否存在这个结点，否则避免不小心把0压入。。。到队列里面（就是求对于一个父母，他们可能不存在在本人id里面，那么把他们的孩子结点放入queue里面就会出现0.。不断标记0的话把0当他们的共同祖先可能会误输出No）</strong></span></p><p> </p>