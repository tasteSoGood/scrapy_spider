<p>Given a binary tree, determine if it is a valid binary search tree (BST).</p><p>Assume a BST is defined as follows:</p><p>The left subtree of a node contains only nodes with keys less than the node’s key.<br>The right subtree of a node contains only nodes with keys greater than the node’s key.<br>Both the left and right subtrees must also be binary search trees.<br>Example 1:<br>2<br>/ \\<br>1 3<br>Binary tree [2,1,3], return true.<br>Example 2:<br>1<br>/ \\<br>2 3<br>Binary tree [1,2,3], return false.</p><p><span style="color: #99cc00;"><strong>题目大意：给一个二叉树，判断这个二叉树是不是合法的二叉搜索树～</strong></span></p><p><span style="color: #ff9900;"><strong>分析：既然是二叉搜索树，那么按照左根右遍历后的结果一定是增序～所以只需要中序遍历一遍，判断遍历结果的数组是不是后面数一定大于前面数就可以了～</strong></span></p><p> </p>