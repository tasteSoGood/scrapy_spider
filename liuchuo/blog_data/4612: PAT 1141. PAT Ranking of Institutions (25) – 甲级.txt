<p><strong><span style="color: #33cccc;">After each PAT, the PAT Center will announce the ranking of institutions based on their students’ performances. Now you are asked to generate the ranklist.</span></strong><br><span style="color: #3366ff;"><strong>Input Specification:</strong></span><br><strong><span style="color: #33cccc;">Each input file contains one test case. For each case, the first line gives a positive integer N (&lt;=105), which is the number of testees. Then N lines follow, each gives the information of a testee in the following format:</span></strong><br><strong><span style="color: #33cccc;">ID Score School</span></strong><br><strong><span style="color: #33cccc;">where “ID” is a string of 6 characters with the first one representing the test level: “B” stands for the basic level, “A” the advanced level and “T” the top level; “Score” is an integer in [0, 100]; and “School” is the institution code which is a string of no more than 6 English letters (case insensitive). Note: it is guaranteed that “ID” is unique for each testee.</span></strong><br><span style="color: #3366ff;"><strong>Output Specification:</strong></span><br><strong><span style="color: #33cccc;">For each case, first print in a line the total number of institutions. Then output the ranklist of institutions in nondecreasing order of their ranks in the following format:</span></strong><br><strong><span style="color: #33cccc;">Rank School TWS Ns</span></strong><br><strong><span style="color: #33cccc;">where “Rank” is the rank (start from 1) of the institution; “School” is the institution code (all in lower case); “TWS” is the total weighted score which is defined to be the integer part of “ScoreB/1.5 + ScoreA + ScoreT*1.5”, where “ScoreX” is the total score of the testees belong to this institution on level X; and “Ns” is the total number of testees who belong to this institution.</span></strong><br><strong><span style="color: #33cccc;">The institutions are ranked according to their TWS. If there is a tie, the institutions are supposed to have the same rank, and they shall be printed in ascending order of Ns. If there is still a tie, they shall be printed in alphabetical order of their codes.</span></strong><br><span style="color: #3366ff;"><strong>Sample Input:</strong></span><br><strong><span style="color: #33cccc;">10</span></strong><br><strong><span style="color: #33cccc;">A57908 85 Au</span></strong><br><strong><span style="color: #33cccc;">B57908 54 LanX</span></strong><br><strong><span style="color: #33cccc;">A37487 60 au</span></strong><br><strong><span style="color: #33cccc;">T28374 67 CMU</span></strong><br><strong><span style="color: #33cccc;">T32486 24 hypu</span></strong><br><strong><span style="color: #33cccc;">A66734 92 cmu</span></strong><br><strong><span style="color: #33cccc;">B76378 71 AU</span></strong><br><strong><span style="color: #33cccc;">A47780 45 lanx</span></strong><br><strong><span style="color: #33cccc;">A72809 100 pku</span></strong><br><strong><span style="color: #33cccc;">A03274 45 hypu</span></strong><br><strong><span style="color: #33cccc;">Sample Output:</span></strong><br><strong><span style="color: #33cccc;">5</span></strong><br><strong><span style="color: #33cccc;">1 cmu 192 2</span></strong><br><strong><span style="color: #33cccc;">1 au 192 3</span></strong><br><strong><span style="color: #33cccc;">3 pku 100 1</span></strong><br><strong><span style="color: #33cccc;">4 hypu 81 2</span></strong><br><strong><span style="color: #33cccc;">4 lanx 81 2</span></strong></p><p><span style="color: #99cc00;"><strong>题目大意：给出每个学生的id、分数、学校，学校名称不区分大小写，输出学校排名、学校名称、总加权成绩、学校参赛人数。学校名称输出时候以小写方式输出。</strong></span><br><span style="color: #ff9900;"><strong>分析：两个map，一个cnt用来存储某学校名称对应的参赛人数，另一个sum计算某学校名称对应的总加权成绩。每次学校名称string school都要转化为全小写，将map中所有学校都保存在vector ans中，类型为node，node中包括学校姓名、加权总分、参赛人数。对ans数组排序，根据题目要求写好cmp函数，最后按要求输出。对于排名的处理：设立pres表示前一个学校的加权总分，如果pres和当前学校的加权总分不同，说明rank等于数组下标+1，否则rank不变～</strong></span><br><span style="color: #ff99cc;"><strong>注意：总加权分数取整数部分是要对最后的总和取整数部分，不能每次都直接用int存储，不然会有一个3分测试点不通过～<br>PS：之前直接使用map，导致在新的PAT系统中提交后最后一个测试点超时，改成了unordered_map即可AC～</strong></span></p><p></p>