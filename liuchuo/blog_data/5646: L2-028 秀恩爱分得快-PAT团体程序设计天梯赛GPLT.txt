<p><span style="color: #3366ff;"><strong>L2-028 秀恩爱分得快（25 分）</strong></span><br><span style="color: #33cccc;"><strong>古人云：秀恩爱，分得快。</strong></span><br><span style="color: #33cccc;"><strong>互联网上每天都有大量人发布大量照片，我们通过分析这些照片，可以分析人与人之间的亲密度。如果一张照片上出现了 K 个人，这些人两两间的亲密度就被定义为 1/K。任意两个人如果同时出现在若干张照片里，他们之间的亲密度就是所有这些同框照片对应的亲密度之和。下面给定一批照片，请你分析一对给定的情侣，看看他们分别有没有亲密度更高的异性朋友？</strong></span><br><span style="color: #3366ff;"><strong>输入格式：</strong></span><br><span style="color: #33cccc;"><strong>输入在第一行给出 2 个正整数：N（不超过1000，为总人数——简单起见，我们把所有人从 0 到 N-1 编号。为了区分性别，我们用编号前的负号表示女性）和 M（不超过1000，为照片总数）。随后 M 行，每行给出一张照片的信息，格式如下：</strong></span><br><span style="color: #33cccc;"><strong>K P[1] … P[K]</strong></span><br><span style="color: #33cccc;"><strong>其中 K（&lt;= 500）是该照片中出现的人数，P[1] ~ P[K] 就是这些人的编号。最后一行给出一对异性情侣的编号 A 和 B。同行数字以空格分隔。题目保证每个人只有一个性别，并且不会在同一张照片里出现多次。</strong></span><br><span style="color: #3366ff;"><strong>输出格式：</strong></span><br><span style="color: #33cccc;"><strong>首先输出“A PA”，其中 PA 是与 A 最亲密的异性。如果 PA 不唯一，则按他们编号的绝对值递增输出；然后类似地输出“B PB”。但如果 A 和 B 正是彼此亲密度最高的一对，则只输出他们的编号，无论是否还有其他人并列。</strong></span><br><span style="color: #3366ff;"><strong>输入样例 1：</strong></span><br><span style="color: #33cccc;"><strong>10 4</strong></span><br><span style="color: #33cccc;"><strong>4 -1 2 -3 4</strong></span><br><span style="color: #33cccc;"><strong>4 2 -3 -5 -6</strong></span><br><span style="color: #33cccc;"><strong>3 2 4 -5</strong></span><br><span style="color: #33cccc;"><strong>3 -6 0 2</strong></span><br><span style="color: #33cccc;"><strong>-3 2</strong></span><br><span style="color: #3366ff;"><strong>输出样例 1：</strong></span><br><span style="color: #33cccc;"><strong>-3 2</strong></span><br><span style="color: #33cccc;"><strong>2 -5</strong></span><br><span style="color: #33cccc;"><strong>2 -6</strong></span><br><span style="color: #3366ff;"><strong>输入样例 2：</strong></span><br><span style="color: #33cccc;"><strong>4 4</strong></span><br><span style="color: #33cccc;"><strong>4 -1 2 -3 0</strong></span><br><span style="color: #33cccc;"><strong>2 0 -3</strong></span><br><span style="color: #33cccc;"><strong>2 2 -3</strong></span><br><span style="color: #33cccc;"><strong>2 -1 2</strong></span><br><span style="color: #33cccc;"><strong>-3 2</strong></span><br><span style="color: #3366ff;"><strong>输出样例 2：</strong></span><br><span style="color: #33cccc;"><strong>-3 2</strong></span></p><p><span style="color: #ff9900;"><strong>分析：1.此题考查的是对 0 -0 的特殊处理。当遇到 0 时候把此人转为1000存储, 所以读数据的时候要以字符串形式读取</strong></span><br><span style="color: #ff9900;"><strong>2.遍历每张照片，把与男主女主对应的异性亲密度用sum数字累加起来， 并维护maxn[1] maxn[2]， 为男主女主的最亲密值 和ans[1], ans[2]容器，为最亲密异性id。</strong></span><br><span style="color: #ff9900;"><strong>3.判断男主女主是否互为最亲密，如果是，输出并return 0， 否则分别输出他们的最亲密好友</strong></span><br><span style="color: #ff9900;"><strong>4.注意输出时候，因为把0当1000存储，会导致0号人排在最后，这是不符题意的，输出之前排个序，让1000排在最前面</strong></span></p><p></p>