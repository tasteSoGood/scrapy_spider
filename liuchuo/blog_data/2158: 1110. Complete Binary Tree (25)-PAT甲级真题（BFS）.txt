<p><span style="color: #33cccc;"><strong>Given a tree, you are supposed to tell if it is a complete binary tree.</strong></span></p><p><span style="color: #3366ff;"><strong>Input Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>Each input file contains one test case. For each case, the first line gives a positive integer N (&lt;=20) which is the total number of nodes in the tree — and hence the nodes are numbered from 0 to N-1. Then N lines follow, each corresponds to a node, and gives the indices of the left and right children of the node. If the child does not exist, a “-” will be put at the position. Any pair of children are separated by a space.</strong></span></p><p><span style="color: #3366ff;"><strong>Output Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>For each case, print in one line “YES” and the index of the last node if the tree is a complete binary tree, or “NO” and the index of the root if not. There must be exactly one space separating the word and the number.</strong></span></p><p><span style="color: #3366ff;"><strong>Sample Input 1:</strong></span><br><span style="color: #33cccc;"><strong>9</strong></span><br><span style="color: #33cccc;"><strong>7 8</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #33cccc;"><strong>0 1</strong></span><br><span style="color: #33cccc;"><strong>2 3</strong></span><br><span style="color: #33cccc;"><strong>4 5</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #3366ff;"><strong>Sample Output 1:</strong></span><br><span style="color: #33cccc;"><strong>YES 8</strong></span><br><span style="color: #3366ff;"><strong>Sample Input 2:</strong></span><br><span style="color: #33cccc;"><strong>8</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #33cccc;"><strong>4 5</strong></span><br><span style="color: #33cccc;"><strong>0 6</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #33cccc;"><strong>2 3</strong></span><br><span style="color: #33cccc;"><strong>– 7</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #33cccc;"><strong>– –</strong></span><br><span style="color: #3366ff;"><strong>Sample Output 2:</strong></span><br><span style="color: #33cccc;"><strong>NO 1</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：给出一个n表示有n个结点，这n个结点为0~n-1，给出这n个结点的左右孩子，求问这棵树是不是完全二叉树</strong></span><br><span style="color: #ff9900;"><b>分析：递归出最大的下标值，完全二叉树一定把前面的下标充满： 最大的下标值 == 最大的节点数；不完全二叉树前满一定有位置是空，会往后挤： 最大的下标值 &gt; 最大的节点数～</b></span></p><p></p>