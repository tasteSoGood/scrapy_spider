<p><span style="color: #33cccc;"><strong>对于在中国大学MOOC（http://www.icourse163.org/）学习“数据结构”课程的学生，想要获得一张合格证书，必须首先获得不少于200分的在线编程作业分，然后总评获得不少于60分（满分100）。总评成绩的计算公式为 G = (G期中x 40% + G期末x 60%)，如果 G期中 &gt; G期末；否则总评 G 就是 G期末。这里 G期中 和 G期末 分别为学生的期中和期末成绩。</strong></span></p><p><span style="color: #33cccc;"><strong>现在的问题是，每次考试都产生一张独立的成绩单。本题就请你编写程序，把不同的成绩单合为一张。</strong></span></p><p><span style="color: #3366ff;"><strong>输入格式：</strong></span></p><p><span style="color: #33cccc;"><strong>输入在第一行给出3个整数，分别是 P（做了在线编程作业的学生数）、M（参加了期中考试的学生数）、N（参加了期末考试的学生数）。每个数都不超过10000。</strong></span></p><p><span style="color: #33cccc;"><strong>接下来有三块输入。第一块包含 P 个在线编程成绩 G编程；第二块包含 M 个期中考试成绩 G期中；第三块包含 N 个期末考试成绩 G期末。每个成绩占一行，格式为：学生学号 分数。其中学生学号为不超过20个字符的英文字母和数字；分数是非负整数（编程总分最高为900分，期中和期末的最高分为100分）。</strong></span></p><p><span style="color: #3366ff;"><strong>输出格式：</strong></span></p><p><span style="color: #33cccc;"><strong>打印出获得合格证书的学生名单。每个学生占一行，格式为：</strong></span></p><p><span style="color: #33cccc;"><strong>学生学号 G编程 G期中 G期末 G</strong></span></p><p><span style="color: #33cccc;"><strong>如果有的成绩不存在（例如某人没参加期中考试），则在相应的位置输出“-1”。输出顺序为按照总评分数（四舍五入精确到整数）递减。若有并列，则按学号递增。题目保证学号没有重复，且至少存在1个合格的学生。</strong></span></p><p><span style="color: #3366ff;"><strong>输入样例：</strong></span><br><span style="color: #33cccc;"><strong>6 6 7</strong></span><br><span style="color: #33cccc;"><strong>01234 880</strong></span><br><span style="color: #33cccc;"><strong>a1903 199</strong></span><br><span style="color: #33cccc;"><strong>ydjh2 200</strong></span><br><span style="color: #33cccc;"><strong>wehu8 300</strong></span><br><span style="color: #33cccc;"><strong>dx86w 220</strong></span><br><span style="color: #33cccc;"><strong>missing 400</strong></span><br><span style="color: #33cccc;"><strong>ydhfu77 99</strong></span><br><span style="color: #33cccc;"><strong>wehu8 55</strong></span><br><span style="color: #33cccc;"><strong>ydjh2 98</strong></span><br><span style="color: #33cccc;"><strong>dx86w 88</strong></span><br><span style="color: #33cccc;"><strong>a1903 86</strong></span><br><span style="color: #33cccc;"><strong>01234 39</strong></span><br><span style="color: #33cccc;"><strong>ydhfu77 88</strong></span><br><span style="color: #33cccc;"><strong>a1903 66</strong></span><br><span style="color: #33cccc;"><strong>01234 58</strong></span><br><span style="color: #33cccc;"><strong>wehu8 84</strong></span><br><span style="color: #33cccc;"><strong>ydjh2 82</strong></span><br><span style="color: #33cccc;"><strong>missing 99</strong></span><br><span style="color: #33cccc;"><strong>dx86w 81</strong></span><br><span style="color: #3366ff;"><strong>输出样例：</strong></span><br><span style="color: #33cccc;"><strong>missing 400 -1 99 99</strong></span><br><span style="color: #33cccc;"><strong>ydjh2 200 98 82 88</strong></span><br><span style="color: #33cccc;"><strong>dx86w 220 88 81 84</strong></span><br><span style="color: #33cccc;"><strong>wehu8 300 55 84 84</strong></span></p><p><span style="color: #ff9900;"><strong>分析：1 因为所有人必须要G编程&gt;=200分，所以用v数组保存所有G编程&gt;=200的人，（一开始gm和gf都为-1），用map映射保存名字所对应v中的下标（为了避免与“不存在”混淆，保存下标+1，当为0时表示该学生的姓名在v中不存在）</strong></span><br><span style="color: #ff9900;"><strong>2 G期中中出现的名字，如果对应的map并不存在（==0），说明该学生编程成绩不满足条件，则无须保存该学生信息。将存在的人的期中考试成绩更新</strong></span><br><span style="color: #ff9900;"><strong>3 G期末中出现的名字，也必须保证在map中存在。先更新G期末和G总为新的成绩，当G期末&lt;G期中时再将G总更新为(G期中x 40% + G期末x 60%)</strong></span><br><span style="color: #ff9900;"><strong>4 将v数组中所有G总满足条件的放入ans数组中，对ans排序（总分递减，总分相同则姓名递增），最后输出ans中的学生信息</strong></span></p><p> </p>