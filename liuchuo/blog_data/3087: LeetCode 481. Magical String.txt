<p>A magical string S consists of only ‘1’ and ‘2’ and obeys the following rules:</p><p>The string S is magical because concatenating the number of contiguous occurrences of characters ‘1’ and ‘2’ generates the string S itself.</p><p>The first few elements of string S is the following: S = “1221121221221121122……”</p><p>If we group the consecutive ‘1’s and ‘2’s in S, it will be:</p><p>1 22 11 2 1 22 1 22 11 2 11 22 ……</p><p>and the occurrences of ‘1’s or ‘2’s in each group are:</p><p>1 2 2 1 1 2 1 2 2 1 2 2 ……</p><p>You can see that the occurrence sequence above is the S itself.</p><p>Given an integer N as input, return the number of ‘1’s in the first N number in the magical string S.</p><p>Note: N will not exceed 100,000.</p><p>Example 1:<br>Input: 6<br>Output: 3<br>Explanation: The first 6 elements of magical string S is “12211” and it contains three 1’s, so return 3.</p><p><span style="color: #ff9900;"><strong>分析：直接按照这个字符串的构造方法还原这个字符串s：首先初始化s = “122”,让index指向下标为2处，开始根据index指向的字符在s后面添加字符串，如果指向的是2就添加2个，如果指向的是1就添加一个，具体添加什么字符以当前s的末尾一位的字符是1还是2为准，如果s当前最后一个字符是1就添加2，反之添加1～还原好了之后用count直接计算字符串从begin()到n长度处一共有多少个’1’字符～～</strong></span></p><p> </p>