<p></p><p></p><p class="p3"><span style="color: #33cccc;"><strong><span class="s1">LABEL</span>定义<span class="s1">ADDW(AUGW)</span>为<span class="s1">WORD</span>变量<span class="s1">,</span>但他自身没存储空间<span class="s1">,</span>而是和下面的<span class="s1">ADDEND</span>占一个空间<span class="s1">,</span>即<span class="s1">ADDW(AUGW)</span>和<span class="s1">ADDEND(AUGEND)</span>在存储器上占相同空间<span class="s1">.</span>一个为<span class="s1">WORD</span>变量类型<span class="s1">,</span>一个为<span class="s1">DD</span>变量类型。</strong></span><br><strong><span style="color: #99cc00;">这里，在ADDEND前申明了一个名为ADDW的标号并赋予其字（<span class="s1">word</span>）属性。ADDW是ADDEND的一个别名。</span></strong><br><strong><span style="color: #99cc00;">常用来将较小的数组成较大的数。</span></strong></p><p class="p1"><strong><span style="color: #ff9900;"><span class="s1">LABEL </span>一般用作定义变量和标号的属性，它是与紧接着的下一条变量和标号定义语句相关的，其类型可以为<span class="s1">BYTE</span>、<span class="s1">WORD</span>、<span class="s1">DWORD</span>、<span class="s1">QWORD</span>、<span class="s1">NEAR</span>、<span class="s1">FAR</span>等等。用法为：</span></strong><br><strong><span style="color: #ff9900;">buffer<span class="s2">（变量）</span> LABEL BYTE<span class="s2">（类型）<br></span>例如：</span></strong><br><strong><span style="color: #ff9900;">Buffer1 LABEL WORD</span></strong><br><strong><span style="color: #ff9900;">Buffer2 DB 20 DUP (?)</span></strong><br><strong><span style="color: #ff9900;">通常，紧接着的下一条语句定义的类型与<span class="s1">LABEL</span>指定的类型不同。而实际上，<span class="s1">Buffer1</span>是<span class="s1">Buffer2</span>的别名，两者指向内存中的同一个存储地址。换言之，同一组数据定义了两种不同的类型，在接受不同数据类型的访问时，可以指定相应的标号。如接受一个字类型数据访问时，使用<span class="s1">Buffer1</span>；接受字节类型数据访问时，使用<span class="s1">Buffer2</span>。否则因为数据类型不匹配，编译器编译时将出现异常。</span></strong><br><strong><span style="color: #ff9900;"><span class="s1">lable</span>本身不占有实际存储空间。</span></strong></p>