<p><span style="color: #ff9900;"><strong>分析：题目给出的数据不一定是二叉树，所以可以看作图来处理～其实就是用邻接表存储啦～v[i]数组中保存i结点的孩子节点们～dp[i][0]表示不取i结点的结果～dp[i][1]表示取i结点的结果～</strong></span></p><p><span style="color: #ff9900;"><strong>用深度优先搜索+动态规划，每个点的最大权值有取当前这个点和不取当前这个点两种情况～如果取当前点，则不能取与它相邻的任何点；不取当前点，则取与它相邻点的最大值进行累加～从底向上累加到顶部～max(dp[1][0], dp[1][1])就是所求结果～</strong></span></p><p><span style="color: #ff9900;"><strong>用一个变量pre保存当前结点的前一个结点～如果等于pre说明访问到了它的父亲结点，为了防止重复访问，要在v[node][i]不等于pre时候继续dfs下去～否则可能会形成无限循环的环～</strong></span></p><p> </p>