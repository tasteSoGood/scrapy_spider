<p>Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.</p><p>Note:<br>You may assume k is always valid, 1 ≤ k ≤ BST’s total elements.</p><p>Follow up:<br>What if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?</p><p>Hint:</p><p>Try to utilize the property of a BST.<br>What if you could modify the BST node’s structure?<br>The optimal runtime complexity is O(height of BST).</p><p><span style="color: #99cc00;"><strong>题目大意：给一个二叉搜索树，返回它的第k小的数～</strong></span></p><p><span style="color: #ff9900;"><strong>分析：二叉搜索树的中序遍历是从小到大排序的，将前k个遍历结果放入nums中，当nums.size() &gt;= k的时候返回nums[k-1]～</strong></span></p><p> </p>