<p><span style="color: #0000ff;"><strong>计算机编程语言的分类：</strong></span></p><p><span style="color: #0000ff;"><strong>三种语言的优缺点：</strong></span></p><p><span style="color: #ff0000;"><strong>机器语言：</strong></span><br><em>可读性、可移植性差，编程繁杂。</em><br><em> 直接执行，速度快，资源占用少；</em><br><strong><span style="color: #ff0000;">汇编语言：</span></strong><br><em>不同的处理器有不同的汇编语言语法和编译器，编译的程序无法在不同的处理器上执行，缺乏可移植性，难于从汇编语言代码上理解程序设计意图，可维护性差，即使是完成简单的工作也需要大量的汇编语言代码，很容易产生bug，难于调试，使用汇编语言必须对某种处理器非常了解，而且只能针对特定的体系结构和处理器进行优化，开发效率很低，周期长且单调。</em><br><em> 能够保持机器语言的一致性，直接、简捷，并能像机器指令一样访问、控制计算机的各种硬件设备，如磁盘、存储器、CPU、I/O端口等。使用汇编语言，可以访问所有能够被访问的软、硬件资源，目标代码简短，占用内存少，执行速度快。</em><br><span style="color: #ff0000;"><strong>高级语言：</strong></span><br><em>运行速度基本上比直接用汇编写的慢，速度和程序大小与编译软件有关。</em><br><em> 高级语言接近算法语言，易学、易掌握，级语言为程序员提供了结构化程序设计的环境和工具，使得设计出来的程序可读性好，可维护性强，可靠性高；高级语言远离机器语言，与具体的计算机硬件关系不大，可移植性好，重用率高；由于把繁杂琐碎的事务交给了编译程序去做，所以自动化程度高，开发周期短，且程序员得到解脱，可以集中时间和精力去从事对于他们来说更为重要的创造性劳动，以提高程序的质量。</em></p><p><span style="color: #0000ff;"><strong>高级语言的分类：</strong></span></p><p><strong>举例：</strong></p><p> </p><p><strong>1.面向过程语言：</strong><br>面向过程语言是以过程或函数为基础的，这种语言对底层硬件，内存等操作比较方便，但是写代码和调试维护等会很麻烦。例如：c语言<br><strong>2.面向对象语言：</strong><br>面向对象语言（Object-Oriented Language）是一类以对象作为基本程序结构单位的程序设计语言，指用于描述的设计是以对象为核心，而对象是程序运行时刻的基本成分。语言中提供了类、继承等成分。<br>面向对象语言的发展有两个方向：一种是纯面向对象语言，如Smalltalk、EIFFEL等；另一种是混合型面向对象语言，即在过程式语言及其它语言中加入类、继承等成分，如C++、Objective-C等</p><p> </p>