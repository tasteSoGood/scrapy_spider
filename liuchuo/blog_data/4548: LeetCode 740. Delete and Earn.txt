<p>Given an array nums of integers, you can perform operations on the array.</p><p>In each operation, you pick any nums[i] and delete it to earn nums[i] points. After, you must delete every element equal to nums[i] – 1 or nums[i] + 1.</p><p>You start with 0 points. Return the maximum number of points you can earn by applying such operations.</p><p>Example 1:<br>Input: nums = [3, 4, 2]<br>Output: 6<br>Explanation:<br>Delete 4 to earn 4 points, consequently 3 is also deleted.<br>Then, delete 2 to earn 2 points. 6 total points are earned.<br>Example 2:<br>Input: nums = [2, 2, 3, 3, 3, 4]<br>Output: 9<br>Explanation:<br>Delete 3 to earn 3 points, deleting both 2 and the 4.<br>Then, delete 3 again to earn 3 points, and 3 again to earn 3 points.<br>9 total points are earned.<br>Note:</p><p>The length of nums is at most 20000.<br>Each element nums[i] is an integer in the range [1, 10000].</p><p><span style="color: #99cc00;"><strong>题目大意：给一个数组，你可以拿起nums[i]并且删除nums[i]并得到nums[i]分数，但是你必须删除数组中所有的nums[i]-1和nums[i]+1，就是说nums[i]-1和nums[i]+1的分数是不可能得到了～求问你能够获得最大的分数会是多少～</strong></span></p><p><span style="color: #ff9900;"><strong>分析：数组不是有序的，且在1～10000之间，所以先遍历数组，将i数字所拥有的个数保存在cnt[i]中。设立dp数组，含有10001个元素，（dp[i]表示遍历到i这个数的时候当前情况下的最大值。最后返回dp[10000]的值就是所求），dp[0] = 0, dp[1] = cnt[1]。i从2遍历到10000。对于dp[i]，因为如果要了i这个数就不能要i-1和i+1，所以当前i有两个选择：一，要i这个数带来的分数cnt[i] * i，那就不能要dp[i-1]只能要dp[i-2]。二，不要i带来的分数要dp[i-1]的分数。这两个选择取最大值，所以dp[i] = max(dp[i-1], cnt[i] * i + dp[i-2])，最后返回dp[10000]～</strong></span></p><p> </p>