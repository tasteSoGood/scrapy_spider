<p>Git is a tool to save versions of your code.</p><p><span style="color: #3366ff;"><strong>git init</strong></span> # initialize, set up all the tools Git needs to begin tracking changes made to the project<br><strong><span style="color: #3366ff;">git status</span></strong> # check the status of those changes<br><span style="color: #3366ff;"><strong>git add &lt;filename&gt;</strong></span> # add a file to the staging area<br><strong><span style="color: #3366ff;">git add &lt;filename1&gt; &lt;filename2&gt; &lt;filename3&gt; …</span></strong> # commit them to a repository in a single commit<br><span style="color: #3366ff;"><strong>git diff &lt;filename&gt;</strong></span> # check the differences between the working directory and the staging area<br># press q on the keyboard to restore the terminal<br><strong><span style="color: #3366ff;">git commit -m “abcdefg”</span></strong> # A commit permanently stores changes from the staging area inside the repository<br><strong><span style="color: #3366ff;">git log</span></strong> # Commits are stored chronologically in the repository and can be viewed with ‘git log’<br># SHA: A 40-character code, uniquely identifies the commit<br><strong><span style="color: #3366ff;">git remote add origin https://github.com/liuchuo/123456.git</span></strong> # remote repository url<br><span style="color: #3366ff;"><strong>git push -u origin master</strong></span> # set upstream for git pull on master branch<br><strong><span style="color: #3366ff;">git push</span></strong> # push the commit to remote repository<br><strong><span style="color: #3366ff;">git show HEAD</span></strong> # the most recently made commit is the HEAD commit.<br># the output of this command will display everything the git log command displays for the HEAD commit, plus all the file changes that were commited.<br><span style="color: #3366ff;"><strong>git checkout HEAD &lt;filename&gt;</strong></span> # restore the file in your working directory to look exactly as it did when you last made a commit<br><span style="color: #3366ff;"><strong>git checkout — &lt;filename&gt;</strong> </span># discard the change in working directory<br><strong><span style="color: #3366ff;">git reset HEAD &lt;filename&gt;</span> </strong># it does not discard file changes from the working directory, it just removes them from the staging area<br><span style="color: #3366ff;"><strong>git reset &lt;commit_SHA&gt;</strong></span> # rewind to the part before you made the wrong turn<br># commit_SHA works by using the first 7 characters of the SHA of a previous commit<br># head goes to a previously made commit of your choice, but not discard file changes form the working directory<br><span style="color: #3366ff;"><strong>git branch</strong></span> # check what branch you are currently on (* is showing you what branch you’re on)<br><span style="color: #3366ff;"><strong>git branch &lt;new_branch_name&gt;</strong> </span># create a new branch<br># new branch name can’t contain whitesapces<br><span style="color: #3366ff;"><strong>git checkout &lt;branch_name&gt;</strong></span> # switch to the new branch<br><strong><span style="color: #3366ff;">git merge &lt;branch_name&gt;</span></strong> # merge branch_name to master, firstly switch over to the master branch<br># if merge conflict, fix conflicts -&gt; add -&gt; commit, then git merge<br><strong><span style="color: #3366ff;">git branch -d &lt;branch_name&gt;</span> </strong># delete branch<br><span style="color: #3366ff;"><strong>git clone &lt;remote_location&gt; &lt;clone_name&gt;</strong></span> # get your own replica of the remote repository<br># remote_location tells Git where to go to find the remote. This could be a web address, or a filepath<br><span style="color: #3366ff;"><strong>git remote -v</strong> </span># see a list of a Git project’s remotes<br><strong><span style="color: #3366ff;">git fetch</span></strong> # see if changes have been made to the remote, this command will not merge changes from the remote into your local repository<br><span style="color: #3366ff;"><strong>git merge origin/master</strong></span> # integrate origin/master into your local master branch<br><strong><span style="color: #3366ff;">git push origin &lt;branch_name&gt;</span></strong> # push a local branch to the origin remote</p><p> </p>