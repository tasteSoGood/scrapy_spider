<p><span style="color: #33cccc;"><strong>This is a problem given in the Graduate Entrance Exam in 2018: Which of the following is NOT a topological order obtained from the given directed graph? Now you are supposed to write a program to test each of the options.</strong></span></p><p><img class="wp-image-5724 aligncenter" src="https://cdn1.liuchuo.net/wp-content/uploads/2016/08/1146.png" alt="" width="453" height="205"><br><span style="color: #3366ff;"><strong>Input Specification:</strong></span><br><span style="color: #33cccc;"><strong>Each input file contains one test case. For each case, the first line gives two positive integers N (&lt;= 1,000), the number of vertices in the graph, and M (&lt;= 10,000), the number of directed edges. Then M lines follow, each gives the start and the end vertices of an edge. The vertices are numbered from 1 to N. After the graph, there is another positive integer K (&lt;= 100). Then K lines of query follow, each gives a permutation of all the vertices. All the numbers in a line are separated by a space.</strong></span><br><span style="color: #3366ff;"><strong>Output Specification:</strong></span><br><span style="color: #33cccc;"><strong>Print in a line all the indices of queries which correspond to “NOT a topological order”. The indices start from zero. All the numbers are separated by a space, and there must no extra space at the beginning or the end of the line. It is graranteed that there is at least one answer.</strong></span><br><span style="color: #33cccc;"><strong>Sample Input:</strong></span><br><span style="color: #33cccc;"><strong>6 8</strong></span><br><span style="color: #33cccc;"><strong>1 2</strong></span><br><span style="color: #33cccc;"><strong>1 3</strong></span><br><span style="color: #33cccc;"><strong>5 2</strong></span><br><span style="color: #33cccc;"><strong>5 4</strong></span><br><span style="color: #33cccc;"><strong>2 3</strong></span><br><span style="color: #33cccc;"><strong>2 6</strong></span><br><span style="color: #33cccc;"><strong>3 4</strong></span><br><span style="color: #33cccc;"><strong>6 4</strong></span><br><span style="color: #33cccc;"><strong>5</strong></span><br><span style="color: #33cccc;"><strong>1 5 2 3 6 4</strong></span><br><span style="color: #33cccc;"><strong>5 1 2 6 3 4</strong></span><br><span style="color: #33cccc;"><strong>5 1 2 3 6 4</strong></span><br><span style="color: #33cccc;"><strong>5 2 1 6 3 4</strong></span><br><span style="color: #33cccc;"><strong>1 2 3 4 5 6</strong></span><br><span style="color: #33cccc;"><strong>Sample Output:</strong></span><br><span style="color: #33cccc;"><strong>3 4</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：给一个有向图，判断给定序列是否是拓扑序列～</strong></span><br><span style="color: #ff9900;"><strong>分析：用邻接表v存储这个有向图，并将每个节点的入度保存在in数组中。对每一个要判断是否是拓扑序列的结点遍历，如果当前结点的入度不为0则表示不是拓扑序列，每次选中某个点后要将它所指向的所有结点的入度-1，最后根据是否出现过入度不为0的点决定是否要输出当前的编号i～flag是用来判断之前是否输出过现在是否要输出空格的～judge是用来判断是否是拓扑序列的～</strong></span></p><p></p>