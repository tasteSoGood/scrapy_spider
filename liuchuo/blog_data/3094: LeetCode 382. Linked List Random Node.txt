<p>Given a singly linked list, return a random node’s value from the linked list. Each node must have the same probability of being chosen.</p><p>Follow up:<br>What if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?</p><p>Example:</p><p>// Init a singly linked list [1,2,3].<br>ListNode head = new ListNode(1);<br>head.next = new ListNode(2);<br>head.next.next = new ListNode(3);<br>Solution solution = new Solution(head);</p><p>// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.<br>solution.getRandom();</p><p><span style="color: #99cc00;"><strong>题目大意：给一个单链表，返回一个随机结点的值，要求每一个结点都有同样的概率被选中～</strong></span></p><p><span style="color: #ff9900;"><strong>分析：先求出链表的长度len，然后用rand() % len生成一个0～len-1之间的随机数cnt，然后从head开始遍历直到第cnt个结点，返回第cnt个结点的值～</strong></span></p><p> </p>