<p>We have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11).</p><p>Now given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero.</p><p>Example 1:<br>Input:<br>bits = [1, 0, 0]<br>Output: True<br>Explanation:<br>The only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.<br>Example 2:<br>Input:<br>bits = [1, 1, 1, 0]<br>Output: False<br>Explanation:<br>The only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.<br>Note:</p><p>1 &lt;= len(bits) &lt;= 1000.<br>bits[i] is always 0 or 1.</p><p><span style="color: #99cc00;"><strong>题目大意：我们有两个特殊字符。 第一个字符可以用1位表示。第二个字符可以用2位（10或11）表示。现在给出一个由几位表示的字符串。 返回最后一个字符是否是一位字符。 给定的字符串将始终以0结束</strong></span></p><p><span style="color: #ff9900;"><strong>分析：i从0开始遍历整个bits数组，当i遇到0时走一步，否则走2步，判断是否会走到最后一个元素～</strong></span></p><p></p>