<p><span style="color: #33cccc;"><strong>Consider a positive integer N written in standard notation with k+1 digits ai as ak…a1a0 with 0 &lt;= ai &lt; 10 for all i and ak &gt; 0. Then N is palindromic if and only if ai = ak-i for all i. Zero is written 0 and is also palindromic by definition.</strong></span></p><p><span style="color: #33cccc;"><strong>Non-palindromic numbers can be paired with palindromic ones via a series of operations. First, the non-palindromic number is reversed and the result is added to the original number. If the result is not a palindromic number, this is repeated until it gives a palindromic number. Such number is called a delayed palindrome. (Quoted from https://en.wikipedia.org/wiki/Palindromic_number)</strong></span></p><p><span style="color: #33cccc;"><strong>Given any positive integer, you are supposed to find its paired palindromic number.</strong></span></p><p><span style="color: #3366ff;"><strong>Input Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>Each input file contains one test case which gives a positive integer no more than 1000 digits.</strong></span></p><p><span style="color: #3366ff;"><strong>Output Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>For each test case, print line by line the process of finding the palindromic number. The format of each line is the following:</strong></span></p><p><span style="color: #33cccc;"><strong>A + B = C</strong></span><br><span style="color: #33cccc;"><strong>where A is the original number, B is the reversed A, and C is their sum. A starts being the input number, and this process ends until C becomes a palindromic number — in this case we print in the last line “C is a palindromic number.”; or if a palindromic number cannot be found in 10 iterations, print “Not found in 10 iterations.” instead.</strong></span></p><p><span style="color: #3366ff;"><strong>Sample Input 1:</strong></span><br><span style="color: #33cccc;"><strong>97152</strong></span><br><span style="color: #33cccc;"><strong>Sample Output 1:</strong></span><br><span style="color: #33cccc;"><strong>97152 + 25179 = 122331</strong></span><br><span style="color: #33cccc;"><strong>122331 + 133221 = 255552</strong></span><br><span style="color: #33cccc;"><strong>255552 is a palindromic number.</strong></span><br><span style="color: #3366ff;"><strong>Sample Input 2:</strong></span><br><span style="color: #33cccc;"><strong>196</strong></span><br><span style="color: #3366ff;"><strong>Sample Output 2:</strong></span><br><span style="color: #33cccc;"><strong>196 + 691 = 887</strong></span><br><span style="color: #33cccc;"><strong>887 + 788 = 1675</strong></span><br><span style="color: #33cccc;"><strong>1675 + 5761 = 7436</strong></span><br><span style="color: #33cccc;"><strong>7436 + 6347 = 13783</strong></span><br><span style="color: #33cccc;"><strong>13783 + 38731 = 52514</strong></span><br><span style="color: #33cccc;"><strong>52514 + 41525 = 94039</strong></span><br><span style="color: #33cccc;"><strong>94039 + 93049 = 187088</strong></span><br><span style="color: #33cccc;"><strong>187088 + 880781 = 1067869</strong></span><br><span style="color: #33cccc;"><strong>1067869 + 9687601 = 10755470</strong></span><br><span style="color: #33cccc;"><strong>10755470 + 07455701 = 18211171</strong></span><br><span style="color: #33cccc;"><strong>Not found in 10 iterations.</strong></span></p><p><span style="color: #ff9900;"><strong>分析：1 将字符串倒置与原字符串比较看是否相等可知s是否为回文串</strong></span><br><span style="color: #ff9900;"><strong>2 字符串s和它的倒置t相加，只需从头到尾相加然后再倒置（记得要处理最后一个进位carry，如果有进位要在末尾+’1’）</strong></span><br><span style="color: #ff9900;"><strong>3 倒置可采用algorithm头文件里面的函数reverse(s.begin(), s.end())直接对s进行倒置</strong></span></p><p> </p>