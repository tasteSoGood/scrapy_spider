<p><strong><span class="md-line md-end-block md-focus"><span class="md-expand"><span style="color: #ff9900;">DD-路径：</span>程序图中的一条链，使得： 情况1：由一个节点组成，内度=0。情况2：由一个节点组成，外度=0。 情况3：由一个节点组成，内度≥2或外度≥2。情况4：由一个节点组成，内度=1并且外度=1。 情况5：长度≥1的最大链。</span></span></strong></p><p><strong><span class="md-line md-end-block"><span class=""><span style="color: #ff9900;">MM-路径：</span>图G的圈数由V(G)=e-n＋p给定，其中： e是G中的边数。n是G中的节点数。 p是G中的组件数。V(G)是图中不同区域的个数。</span></span></strong></p><p><strong><span class="md-line md-end-block" style="color: #ff9900;"><span class="">DD-路径和MM-路径的区别与联系：</span></span></strong></p><p><strong><span class="md-line md-end-block">DD-路径：该测试方法的突出特点，是它们都基于被测程序的源代码，而不是基于定义。由于这种绝对化的基础，结构性测试方法支持严格定义、数据分析和精确度量。<br></span><span class="md-line md-end-block"><span class="">MM-路径：</span></span></strong><strong><span class="md-line md-end-block"><span class="">通过定义加法和标量乘法的概念，强制使其看起来像向量空间：路径加法就是一条路径后接另一条路径，乘法对应于路径的重复。这种方法首先选择一个基线路径，应该对应某个“正常案例”程序的执行。接下来重复回溯基线路径，依次“翻转”每个判断点，即当节点的外度≥2时，必须取不同的边。<br></span></span></strong><strong><span class="md-line md-end-block"><span class="">一、测试基路径集合是充分的（它不是）<br>二、向量运算用于程序路径的表达上，没有意义。</span></span></strong></p>