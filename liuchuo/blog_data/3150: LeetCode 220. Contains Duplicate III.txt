<p>Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.</p><p><span style="color: #99cc00;"><strong>题目大意：给一个整数数组，找到是否存在两个不同的下标i和j，使得nums[i]和nums[j]的差的绝对值不超过t并且i和j的差的绝对值不超过k～</strong></span></p><p><span style="color: #ff9900;"><strong>分析：建立一个map，对应的是元素的值到元素的下标的映射。指针i将nums数组从头遍历到尾，j指针一开始指向0。i向右走的时候如果i和j之差大于k，且m中有nums[j]，就将nums[j]从m中移除，且j向前走一步～这样就保证了m中所有的元素满足第一个条件：i和j的差的绝对值不超过k～</strong></span></p><p><span style="color: #ff9900;"><strong>接下来考虑nums[i]和nums[j]的差的绝对值不超过t，abs(num[i] – nums[j]) &lt;= t 则 nums[j]的最小可能满足条件的值为&gt;=nums[i] – t的，所以使用map中的lower_bound，寻找第一个大于等于nums[i] – t的地方，找到后标记为a，此时的a只是取到了可能满足的最小的a，但(a – nums[i])不一定满足，所以检验a是否存在于map中且是否abs(a-&gt;first – nums[i]) &lt;= t。如果都满足说明可以return true～</strong></span></p><p><span style="color: #ff9900;"><strong>为什么要循环的最后写map的插入呢，因为比较的是i之前的所有元素～为了防止找到的是nums[i]本身，然后让nums[i]自己本身和自己比较差值了，这样结果就不对了～</strong></span><br><span style="color: #ff9900;"><strong>如果到最后都没有能够return true，则return false～</strong></span></p><p> </p>