<p><strong><span style="color: #33cccc;">算法提高 Torry的困惑(提高型)</span></strong><br><span style="color: #3366ff;"><strong>问题描述</strong></span><br><strong><span style="color: #33cccc;">　　Torry从小喜爱数学。一天，老师告诉他，像2、3、5、7……这样的数叫做质数。Torry突然想到一个问题，前10、100、1000、10000……个质数的乘积是多少呢？他把这个问题告诉老师。老师愣住了，一时回答不出来。于是Torry求助于会编程的你，请你算出前n个质数的乘积。不过，考虑到你才接触编程不久，Torry只要你算出这个数模上50000的值。</span></strong><br><span style="color: #3366ff;"><strong>输入格式</strong></span><br><strong><span style="color: #33cccc;">　　仅包含一个正整数n，其中n&lt;=100000。</span></strong><br><span style="color: #3366ff;"><strong>输出格式</strong></span><br><strong><span style="color: #33cccc;">　　输出一行，即前n个质数的乘积模50000的值。</span></strong><br><span style="color: #3366ff;"><strong>样例输入</strong></span><br><strong><span style="color: #33cccc;">1</span></strong><br><span style="color: #3366ff;"><strong>样例输出</strong></span><br><strong><span style="color: #33cccc;">2<br></span></strong></p><p><strong><span style="color: #ff9900;">分析：和leetcode里面那道easy的题目-<a style="color: #ff9900;" href="http://www.liuchuo.net/archives/1015">LeetCode 204. Count Primes</a>方法一样~用v[i]数组标记当前是否为质数，先初始化为都为质数==0，然后只需去除从2到根号n的，从i*i开始的所有i的倍数即可~当然，当当前v[i]已经标记为不是质数的时候，就无需判断它的倍数了，因为例如16是4的倍数的同时，如果已知4是2的倍数，那么16一定是2的倍数~~</span></strong></p><p><strong><span style="color: #33cccc;"> </span></strong></p>