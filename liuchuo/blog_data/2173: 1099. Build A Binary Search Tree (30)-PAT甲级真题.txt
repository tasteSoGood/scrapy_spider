<p><span style="color: #33cccc;"><strong>A Binary Search Tree (BST) is recursively defined as a binary tree which has the following properties:</strong></span></p><p><span style="color: #33cccc;"><strong>The left subtree of a node contains only nodes with keys less than the node’s key.</strong></span><br><span style="color: #33cccc;"><strong>The right subtree of a node contains only nodes with keys greater than or equal to the node’s key.</strong></span><br><span style="color: #33cccc;"><strong>Both the left and right subtrees must also be binary search trees.</strong></span><br><span style="color: #33cccc;"><strong>Given the structure of a binary tree and a sequence of distinct integer keys, there is only one way to fill these keys into the tree so that the resulting tree satisfies the definition of a BST. You are supposed to output the level order traversal sequence of that tree. The sample is illustrated by Figure 1 and 2.<br><img class="alignnone size-full wp-image-2174" src="http://www.liuchuo.net/wp-content/uploads/2016/08/Snip20160811_82.png" alt="Snip20160811_82" width="1088" height="690" srcset="https://cdn1.liuchuo.net/wp-content/uploads/2016/08/Snip20160811_82.png 1088w, https://cdn1.liuchuo.net/wp-content/uploads/2016/08/Snip20160811_82-300x190.png 300w, https://cdn1.liuchuo.net/wp-content/uploads/2016/08/Snip20160811_82-768x487.png 768w, https://cdn1.liuchuo.net/wp-content/uploads/2016/08/Snip20160811_82-1024x649.png 1024w" sizes="(max-width: 1088px) 100vw, 1088px"><br></strong></span><br><span style="color: #3366ff;"><strong>Input Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>Each input file contains one test case. For each case, the first line gives a positive integer N (&lt;=100) which is the total number of nodes in the tree. The next N lines each contains the left and the right children of a node in the format “left_index right_index”, provided that the nodes are numbered from 0 to N-1, and 0 is always the root. If one child is missing, then -1 will represent the NULL child pointer. Finally N distinct integer keys are given in the last line.</strong></span></p><p><span style="color: #3366ff;"><strong>Output Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>For each test case, print in one line the level order traversal sequence of that tree. All the numbers must be separated by a space, with no extra space at the end of the line.</strong></span></p><p><span style="color: #3366ff;"><strong>Sample Input:</strong></span><br><span style="color: #33cccc;"><strong>9</strong></span><br><span style="color: #33cccc;"><strong>1 6</strong></span><br><span style="color: #33cccc;"><strong>2 3</strong></span><br><span style="color: #33cccc;"><strong>-1 -1</strong></span><br><span style="color: #33cccc;"><strong>-1 4</strong></span><br><span style="color: #33cccc;"><strong>5 -1</strong></span><br><span style="color: #33cccc;"><strong>-1 -1</strong></span><br><span style="color: #33cccc;"><strong>7 -1</strong></span><br><span style="color: #33cccc;"><strong>-1 8</strong></span><br><span style="color: #33cccc;"><strong>-1 -1</strong></span><br><span style="color: #33cccc;"><strong>73 45 11 58 82 25 67 38 42</strong></span><br><span style="color: #3366ff;"><strong>Sample Output:</strong></span><br><span style="color: #33cccc;"><strong>58 25 82 11 38 67 45 73 42</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：给出一棵二叉搜索树（给出每个结点的左右孩子），且已知根结点为0，求并且给出应该插入这个二叉搜索树的数值，求这棵二叉树的层序遍历</strong></span><br><span style="color: #ff9900;"><b>分析：1. 用结构体data，left，right，index，level表示这棵树的结构，a数组存树的信息，b数组存这棵树节点的所有data，根据输入可知树a[i]的left和right～<br>2. 因为是二叉搜索树，所以中序遍历这棵树得到的结点顺序应该是给出的数值序列从小到大的排列顺序，所以把数值序列排序后，可以在中序遍历的时候直接赋值当前tree[root].data～<br>3. 然后根据节点的层数和下标，就可以排序输出层序了～</b></span></p><p> </p>