<p><span style="color: #33cccc;"><strong>Forbes magazine publishes every year its list of billionaires based on the annual ranking of the world’s wealthiest people. Now you are supposed to simulate this job, but concentrate only on the people in a certain range of ages. That is, given the net worths of N people, you must find the M richest people in a given range of their ages.</strong></span></p><p><span style="color: #3366ff;"><strong>Input Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>Each input file contains one test case. For each case, the first line contains 2 positive integers: N (&lt;=105) – the total number of people, and K (&lt;=103) – the number of queries. Then N lines follow, each contains the name (string of no more than 8 characters without space), age (integer in (0, 200]), and the net worth (integer in [-106, 106]) of a person. Finally there are K lines of queries, each contains three positive integers: M (&lt;= 100) – the maximum number of outputs, and [Amin, Amax] which are the range of ages. All the numbers in a line are separated by a space.</strong></span></p><p><span style="color: #3366ff;"><strong>Output Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>For each query, first print in a line Case #X: where X is the query number starting from 1. Then output the M richest people with their ages in the range [Amin, Amax]. Each person’s information occupies a line, in the format</strong></span></p><p><span style="color: #33cccc;"><strong>Name Age Net_Worth</strong></span><br><span style="color: #33cccc;"><strong>The outputs must be in non-increasing order of the net worths. In case there are equal worths, it must be in non-decreasing order of the ages. If both worths and ages are the same, then the output must be in non-decreasing alphabetical order of the names. It is guaranteed that there is no two persons share all the same of the three pieces of information. In case no one is found, output “None”.</strong></span><br><span style="color: #3366ff;"><strong>Sample Input:</strong></span><br><span style="color: #33cccc;"><strong>12 4</strong></span><br><span style="color: #33cccc;"><strong>Zoe_Bill 35 2333</strong></span><br><span style="color: #33cccc;"><strong>Bob_Volk 24 5888</strong></span><br><span style="color: #33cccc;"><strong>Anny_Cin 95 999999</strong></span><br><span style="color: #33cccc;"><strong>Williams 30 -22</strong></span><br><span style="color: #33cccc;"><strong>Cindy 76 76000</strong></span><br><span style="color: #33cccc;"><strong>Alice 18 88888</strong></span><br><span style="color: #33cccc;"><strong>Joe_Mike 32 3222</strong></span><br><span style="color: #33cccc;"><strong>Michael 5 300000</strong></span><br><span style="color: #33cccc;"><strong>Rosemary 40 5888</strong></span><br><span style="color: #33cccc;"><strong>Dobby 24 5888</strong></span><br><span style="color: #33cccc;"><strong>Billy 24 5888</strong></span><br><span style="color: #33cccc;"><strong>Nobody 5 0</strong></span><br><span style="color: #33cccc;"><strong>4 15 45</strong></span><br><span style="color: #33cccc;"><strong>4 30 35</strong></span><br><span style="color: #33cccc;"><strong>4 5 95</strong></span><br><span style="color: #33cccc;"><strong>1 45 50</strong></span><br><span style="color: #3366ff;"><strong>Sample Output:</strong></span><br><span style="color: #33cccc;"><strong>Case #1:</strong></span><br><span style="color: #33cccc;"><strong>Alice 18 88888</strong></span><br><span style="color: #33cccc;"><strong>Billy 24 5888</strong></span><br><span style="color: #33cccc;"><strong>Bob_Volk 24 5888</strong></span><br><span style="color: #33cccc;"><strong>Dobby 24 5888</strong></span><br><span style="color: #33cccc;"><strong>Case #2:</strong></span><br><span style="color: #33cccc;"><strong>Joe_Mike 32 3222</strong></span><br><span style="color: #33cccc;"><strong>Zoe_Bill 35 2333</strong></span><br><span style="color: #33cccc;"><strong>Williams 30 -22</strong></span><br><span style="color: #33cccc;"><strong>Case #3:</strong></span><br><span style="color: #33cccc;"><strong>Anny_Cin 95 999999</strong></span><br><span style="color: #33cccc;"><strong>Michael 5 300000</strong></span><br><span style="color: #33cccc;"><strong>Alice 18 88888</strong></span><br><span style="color: #33cccc;"><strong>Cindy 76 76000</strong></span><br><span style="color: #33cccc;"><strong>Case #4:</strong></span><br><span style="color: #33cccc;"><strong>None</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：给出n个人的姓名、年龄和拥有的钱，然后进行k次查询，每次查询输出在年龄区间内的财富值的从大到小的前m个人的信息。如果财富值相同就就先输出年龄小的，如果年龄相同就把名字按照字典序排序输出～</strong></span><br><span style="color: #ff9900;"><strong>分析：不能先排序然后根据每一个条件再新建一个数组、对新数组排序的方法，这样测试点2会超时～因为n和m的悬殊太大了，n有10的5次方，m却只有100个。所以先把所有的人按照财富值排序，再建立一个数组book标记每个年龄段拥有的人的数量，遍历数组并统计相应年龄的人数，当 当前年龄的人的数量不超过100的时候压入新的数组，多出来的不要压入新数组中（也就是说只取每个年龄的前100名，因为一个年龄段最小的就是一个年龄，即使这样也不会超过100个需要输出），再从这个新的数组里面取符合相应年龄的人的信息～～</strong></span></p><p> </p>