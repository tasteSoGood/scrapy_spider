<p>Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.</p><p>Example:</p><p>Input: The root of a Binary Search Tree like this:<br>5<br>/ \\<br>2 13</p><p>Output: The root of a Greater Tree like this:<br>18<br>/ \\<br>20 13</p><p><span style="color: #99cc00;"><strong>题目大意：给定一个二叉搜索树（BST），将其转换为一个Greater Tree，使得原始BST的每个结点的键值被改变为原始键加上所有比BST中的原始键大的键的总和。</strong></span></p><p><span style="color: #ff9900;"><strong>分析：因为BST的中序遍历是从小到大排列，那么BST的右根左遍历方式得到的就是从大到小的排列，遍历过程中对当前结点累计到sum中，并将sum的值赋值给当前结点，最后返回这棵树即可～</strong></span></p><p></p>