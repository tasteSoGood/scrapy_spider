<p><span style="color: #33cccc;"><strong>It is said that in 2013, there were about 100 graduate schools ready to proceed over 40,000 applications in Zhejiang Province. It would help a lot if you could write a program to automate the admission procedure.</strong></span></p><p><span style="color: #33cccc;"><strong>Each applicant will have to provide two grades: the national entrance exam grade GE, and the interview grade GI. The final grade of an applicant is (GE + GI) / 2. The admission rules are:</strong></span></p><p><span style="color: #33cccc;"><strong>The applicants are ranked according to their final grades, and will be admitted one by one from the top of the rank list.</strong></span><br><span style="color: #33cccc;"><strong>If there is a tied final grade, the applicants will be ranked according to their national entrance exam grade GE. If still tied, their ranks must be the same.</strong></span><br><span style="color: #33cccc;"><strong>Each applicant may have K choices and the admission will be done according to his/her choices: if according to the rank list, it is one’s turn to be admitted; and if the quota of one’s most preferred shcool is not exceeded, then one will be admitted to this school, or one’s other choices will be considered one by one in order. If one gets rejected by all of preferred schools, then this unfortunate applicant will be rejected.</strong></span><br><span style="color: #33cccc;"><strong>If there is a tied rank, and if the corresponding applicants are applying to the same school, then that school must admit all the applicants with the same rank, even if its quota will be exceeded.</strong></span><br><span style="color: #3366ff;"><strong>Input Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>Each input file contains one test case. Each case starts with a line containing three positive integers: N (&lt;=40,000), the total number of applicants; M (&lt;=100), the total number of graduate schools; and K (&lt;=5), the number of choices an applicant may have.</strong></span></p><p><span style="color: #33cccc;"><strong>In the next line, separated by a space, there are M positive integers. The i-th integer is the quota of the i-th graduate school respectively.</strong></span></p><p><span style="color: #33cccc;"><strong>Then N lines follow, each contains 2+K integers separated by a space. The first 2 integers are the applicant’s GE and GI, respectively. The next K integers represent the preferred schools. For the sake of simplicity, we assume that the schools are numbered from 0 to M-1, and the applicants are numbered from 0 to N-1.</strong></span></p><p><span style="color: #3366ff;"><strong>Output Specification:</strong></span></p><p><span style="color: #33cccc;"><strong>For each test case you should output the admission results for all the graduate schools. The results of each school must occupy a line, which contains the applicants’ numbers that school admits. The numbers must be in increasing order and be separated by a space. There must be no extra space at the end of each line. If no applicant is admitted by a school, you must output an empty line correspondingly.</strong></span></p><p><span style="color: #3366ff;"><strong>Sample Input:</strong></span><br><span style="color: #33cccc;"><strong>11 6 3</strong></span><br><span style="color: #33cccc;"><strong>2 1 2 2 2 3</strong></span><br><span style="color: #33cccc;"><strong>100 100 0 1 2</strong></span><br><span style="color: #33cccc;"><strong>60 60 2 3 5</strong></span><br><span style="color: #33cccc;"><strong>100 90 0 3 4</strong></span><br><span style="color: #33cccc;"><strong>90 100 1 2 0</strong></span><br><span style="color: #33cccc;"><strong>90 90 5 1 3</strong></span><br><span style="color: #33cccc;"><strong>80 90 1 0 2</strong></span><br><span style="color: #33cccc;"><strong>80 80 0 1 2</strong></span><br><span style="color: #33cccc;"><strong>80 80 0 1 2</strong></span><br><span style="color: #33cccc;"><strong>80 70 1 3 2</strong></span><br><span style="color: #33cccc;"><strong>70 80 1 2 3</strong></span><br><span style="color: #33cccc;"><strong>100 100 0 2 4</strong></span><br><span style="color: #3366ff;"><strong>Sample Output:</strong></span><br><span style="color: #33cccc;"><strong>0 10</strong></span><br><span style="color: #33cccc;"><strong>3</strong></span><br><span style="color: #33cccc;"><strong>5 6 7</strong></span><br><span style="color: #33cccc;"><strong>2 8</strong></span></p><p><span style="color: #33cccc;"><strong>1 4</strong></span></p><p><span style="color: #99cc00;"><strong>题目大意：每个考生有两个成绩：GE和GI，最终成绩为(GE + GI) / 2;按照最终成绩排名，如果最终成绩相同，就按照GE排名，如果仍然相同，他们的排名就是相同的。每个申请者有K个选择院校，每个学校也有招生人数限制。按照排名先后，如果当前考生的第一个志愿学校的名额还没满，就录取进去；如果当前志愿名额满了但是该校最后一个录取的人的排名和当前考生相同，则不管招生人数限制，依旧应该被录取；否则考虑该生的下一个志愿。如果所有志愿都没有能被录取，则该生落榜。</strong></span></p><p><span style="color: #ff9900;"><strong>分析：</strong></span><br><span style="color: #ff9900;"><strong>1.stu容器里放学生{id, ge, gi, fin, choice(容器里放学生报考学校的id)}, quota数组放招生计划的数量，cnt数组存放当前学校已经招收的学生数，sch数组里放的容器，容器里是学校已经招的学生的id～</strong></span><br><span style="color: #ff9900;"><strong>2.对学生按照分数排序，依次学生遍历，分数最高的学生先挑学校～</strong></span><br><span style="color: #ff9900;"><strong>3.对于每个学生录取到哪里：依次遍历学生的报考志愿，如果（没招满 || 他与已经招的学生的最后一名成绩并列）就把他招进去，该学生录取结果即可确定，更新该学校已经招生的人数，并把次学生加入该学校录取容器中～</strong></span><br><span style="color: #ff9900;"><strong>4.输出学校录取情况时学生id顺序是乱的，要先从小到大排序，然后输出。每个学校占一行～</strong></span><br><span style="color: #ff9900;"><strong>5.排序函数要用 &amp; 引用传参，不然会超时～</strong></span><br><span style="color: #ff9900;"><strong>6.因为分数 fin = ge + gi 不会超出int, fin / 2 和fin排名效果一样， 不除2不会影响结果，而且还可以巧妙躲避除2后double不能精确表示的问题～</strong></span></p><p> </p>