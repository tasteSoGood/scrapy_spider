<p class="p1"><span style="color: #333333;">vector</span><span class="s1">是一个模板类</span><span style="color: #333333;"> </span><span class="s1">所以使用时要用</span><span class="Apple-style-span" style="color: #00ccff;">vector&lt;int&gt; a</span><span style="color: #333333;"> </span><span class="s1">或者</span><span style="color: #333333;"> </span><span class="Apple-style-span" style="color: #00ccff;">vector&lt;double&gt; b</span><span class="s1">这样的方式来声明一个</span><span style="color: #333333;">vector<br></span><span class="Apple-style-span" style="color: #00ccff;">vector&lt;int&gt;</span><span class="s1">是一个类似于</span>int a[]<span class="s1">的整数数组，而</span>vector&lt;string&gt;<span class="s1">是一个类似于</span>string a[]<span class="s1"><span style="color: #333333;">的字符串数组<br></span></span><span class="Apple-style-span" style="color: #00ccff;">clear()</span><span class="s1"><span style="color: #333333;">清空<br></span></span><span class="Apple-style-span" style="color: #00ccff;">resize()</span><span class="s1"><span style="color: #333333;">改变大小<br></span></span><span class="Apple-style-span" style="color: #00ccff;">push_back()</span><span class="s1"><span style="color: #333333;">在尾部添加元素<br><span style="color: #00ccff;">erase()</span>删除元素<br></span></span><span class="Apple-style-span" style="color: #00ccff;">pop_back()</span><span class="s1"><span style="color: #333333;">在尾部删除元素<br></span></span><span class="Apple-style-span" style="color: #00ccff;">empty()</span><span class="s1">测试是否为空<br></span><span class="s2">vector</span><span style="color: #333333;">之间可以直接赋值或者作为函数的返回值<br></span><span class="s2" style="color: #00ccff;">push_back()</span>和<span class="s2"><span class="Apple-style-span">pop_back()</span></span>无需改变数组长度，自动会增加和减小数组长度<br>增加长度后增加的元素值为<span class="s2">0<br></span>测试代码：</p><p class="p2"><span id="more-169"></span></p><p></p><p><span class="Apple-style-span" style="color: #99cc00;"><span class="Apple-style-span">STL</span><span class="s1"><span class="Apple-style-span">中</span></span><span class="Apple-style-span">vector</span><span class="s1"><span style="color: #99cc00;"><b>的方法：<br></b></span></span></span><span class="Apple-style-span" style="color: #00ccff;">c.assign(beg,end)</span>  <span class="s1">将</span>(beg; end)<span class="s1">区间中的数据赋值给</span>c<span class="s1"><span style="color: #333333;">。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c.assign(n,elem)</span><span class="s1">　</span><span class="s1">将</span>n<span class="s1">个</span>elem<span class="s1">的拷贝赋值给</span>c<span class="s1"><span style="color: #333333;">。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c. at(idx)</span><span class="s1">　</span> <span class="s1">传回索引</span>idx<span class="s1">所指的数据，如果</span>idx<span class="s1">越界，抛出</span>out_of_range<span class="s1"><span style="color: #333333;">。<br></span></span><span class="s2" style="color: #00ccff;">c.back()</span><span style="color: #333333;">　 传回最后一个数据，不检查这个数据是否存在。<br></span><span class="s2" style="color: #00ccff;">c.begin()</span>　 传回<a href="http://baike.baidu.com/view/925158.htm"><span class="s3">迭代器</span></a><span style="color: #333333;">中的第一个数据地址。<br></span><span class="Apple-style-span" style="color: #00ccff;">c.capacity()</span><span class="s1">　</span> <span class="s1"><span style="color: #333333;">返回容器中数据个数。<br></span></span><span class="s2" style="color: #00ccff;">c.clear()</span><span style="color: #333333;">　 移除容器中所有数据。<br></span><span class="Apple-style-span" style="color: #00ccff;">c.empty()</span><span class="s1">　</span> <span class="s1"><span style="color: #333333;">判断容器是否为空。<br></span></span><span class="s2"><span class="Apple-style-span" style="color: #00ccff;">c.end()</span> // </span><span style="color: #333333;">指向迭代器中末端元素的下一个，指向一个不存在元素。<br></span><span class="Apple-style-span" style="color: #00ccff;">c.erase(pos)</span> // <span class="s1">删除</span>pos<span class="s1"><span style="color: #333333;">位置的数据，传回下一个数据的位置。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c.erase(beg,end)</span><span class="s1">　删除</span>[beg,end)<span class="s1"><span style="color: #333333;">区间的数据，传回下一个数据的位置。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c.front()</span><span class="s1">　</span> <span class="s1">　</span> <span class="s1"><span style="color: #333333;">传回第一个数据。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">get_allocator</span><span class="s1">　</span> <span class="s1"><span style="color: #333333;">使用</span><a href="http://baike.baidu.com/view/411124.htm"><span class="s3">构造函数</span></a><span style="color: #333333;">返回一个拷贝。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c.insert(pos,elem)</span> // <span class="s1">在</span>pos<span class="s1">位置插入一个</span>elem<span class="s1"><span style="color: #333333;">拷贝，传回新数据位置<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c.insert(pos,n,elem)</span> // <span class="s1">在</span>pos<span class="s1">位置插入</span>n<span class="s1">个</span>elem<span class="s1">数据</span>,<span class="s1"><span style="color: #333333;">无</span><span class="s3"><a href="http://baike.baidu.com/subview/1289389/1289389.htm">返回值</a><span style="color: #333333;"><br></span></span></span><span class="Apple-style-span" style="color: #00ccff;">c.insert(pos,beg,end)</span> // <span class="s1">在</span>pos<span class="s1">位置插入在</span>[beg,end)<span class="s1"><span style="color: #333333;">区间的数据。无返回值<br></span></span><span class="s2" style="color: #00ccff;">c.max_size()</span><span style="color: #333333;">　 返回容器中最大数据的数量。<br></span><span class="Apple-style-span" style="color: #00ccff;">c.pop_back()</span><span class="s1">　</span> <span class="s1"><span style="color: #333333;">删除最后一个数据。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c.<a style="color: #00ccff;" href="http://baike.baidu.com/view/4645139.htm"><span class="s3">push_back</span></a>(elem)</span><span class="s1">　</span> <span class="s1"><span style="color: #333333;">在尾部加入一个数据。<br></span></span><span class="s2" style="color: #00ccff;">c.rbegin()</span><span style="color: #333333;">　 传回一个逆向队列的第一个数据。<br></span><span class="s2" style="color: #00ccff;">c.rend()</span><span style="color: #333333;">　 传回一个逆向队列的最后一个数据的下一个位置。<br></span><span class="Apple-style-span" style="color: #00ccff;">c.resize(num)</span><span class="s1">　</span> <span class="s1"><span style="color: #333333;">　重新指定队列的长度。<br></span></span><span class="Apple-style-span" style="color: #00ccff;">c.reserve()</span><span class="s1">　</span> <span class="s1"><span style="color: #333333;">保留适当的容量。<br></span></span><span class="s2" style="color: #00ccff;">c.size()</span><span style="color: #333333;">　 返回容器中实际数据的个数。<br></span><span class="Apple-style-span" style="color: #00ccff;">c1.swap(c2)</span> // <span class="s1">将</span>c1<span class="s1">和</span>c2<span class="s1">元素互换</span></p><p> </p><p class="p1"><strong><span style="color: #ff9900;">vector的v.erase()</span></strong></p><p class="p1"><span style="color: #ff9900;"><strong>v.erase(v.begin()+2);//删除v[2]元素 </strong></span><br><span style="color: #ff9900;"><strong>v.erase(v.begin()+2，v.begin()+5);//删除v[2] v[3] v[4] </strong></span><br><span style="color: #ff9900;"><strong>v.clear();//清空 </strong></span></p>