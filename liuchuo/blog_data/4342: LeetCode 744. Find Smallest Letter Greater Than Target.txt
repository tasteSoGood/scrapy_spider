<p>Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.</p><p>Letters also wrap around. For example, if the target is target = ‘z’ and letters = [‘a’, ‘b’], the answer is ‘a’.</p><p>Examples:<br>Input:<br>letters = [“c”, “f”, “j”]<br>target = “a”<br>Output: “c”</p><p>Input:<br>letters = [“c”, “f”, “j”]<br>target = “c”<br>Output: “f”</p><p>Input:<br>letters = [“c”, “f”, “j”]<br>target = “d”<br>Output: “f”</p><p>Input:<br>letters = [“c”, “f”, “j”]<br>target = “g”<br>Output: “j”</p><p>Input:<br>letters = [“c”, “f”, “j”]<br>target = “j”<br>Output: “c”</p><p>Input:<br>letters = [“c”, “f”, “j”]<br>target = “k”<br>Output: “c”<br>Note:<br>letters has a length in range [2, 10000].<br>letters consists of lowercase letters, and contains at least 2 unique letters.<br>target is a lowercase letter.</p><p><span style="color: #ff9900;"><strong>分析：用upper_bound返回第一个大于target的元素所在位置，如果这个位置等于letters.end()说明不存在，则返回letters的第一个值，否则返回it所在位置的元素值即可～</strong></span></p><p> </p>